{"version":3,"sources":["../node_modules/fp-ts/lib/function.js","../node_modules/fp-ts/lib/Option.js","../lib/ctx-util.ts","../lib/vec3.ts","../lib/mat3x3.ts","camera/orbit-camera.ts","voxel/voxel-face.ts","../node_modules/fp-ts/lib/Ordering.js","../node_modules/fp-ts/lib/Ord.js","../node_modules/fp-ts/lib/Semigroup.js","voxel/raycasting.ts","smooth-equation-casting.ts","camera/perspective-camera.ts","space-conversion.ts","util.ts","smooth-equation-casting-test.ts","index.ts","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"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","file":"src.77de5100.js","sourceRoot":"..\\src","sourcesContent":["\"use strict\";\n/**\n * @since 2.0.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bindTo_ = exports.bind_ = exports.hole = exports.pipe = exports.untupled = exports.tupled = exports.absurd = exports.decrement = exports.increment = exports.tuple = exports.flow = exports.flip = exports.constVoid = exports.constUndefined = exports.constNull = exports.constFalse = exports.constTrue = exports.constant = exports.not = exports.unsafeCoerce = exports.identity = void 0;\n/**\n * @since 2.0.0\n */\nfunction identity(a) {\n    return a;\n}\nexports.identity = identity;\n/**\n * @since 2.0.0\n */\nexports.unsafeCoerce = identity;\n/**\n * @since 2.0.0\n */\nfunction not(predicate) {\n    return function (a) { return !predicate(a); };\n}\nexports.not = not;\n/**\n * @since 2.0.0\n */\nfunction constant(a) {\n    return function () { return a; };\n}\nexports.constant = constant;\n/**\n * A thunk that returns always `true`.\n *\n * @since 2.0.0\n */\nexports.constTrue = \n/*#__PURE__*/\nconstant(true);\n/**\n * A thunk that returns always `false`.\n *\n * @since 2.0.0\n */\nexports.constFalse = \n/*#__PURE__*/\nconstant(false);\n/**\n * A thunk that returns always `null`.\n *\n * @since 2.0.0\n */\nexports.constNull = \n/*#__PURE__*/\nconstant(null);\n/**\n * A thunk that returns always `undefined`.\n *\n * @since 2.0.0\n */\nexports.constUndefined = \n/*#__PURE__*/\nconstant(undefined);\n/**\n * A thunk that returns always `void`.\n *\n * @since 2.0.0\n */\nexports.constVoid = exports.constUndefined;\n// TODO: remove in v3\n/**\n * Flips the order of the arguments of a function of two arguments.\n *\n * @since 2.0.0\n */\nfunction flip(f) {\n    return function (b, a) { return f(a, b); };\n}\nexports.flip = flip;\nfunction flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {\n    switch (arguments.length) {\n        case 1:\n            return ab;\n        case 2:\n            return function () {\n                return bc(ab.apply(this, arguments));\n            };\n        case 3:\n            return function () {\n                return cd(bc(ab.apply(this, arguments)));\n            };\n        case 4:\n            return function () {\n                return de(cd(bc(ab.apply(this, arguments))));\n            };\n        case 5:\n            return function () {\n                return ef(de(cd(bc(ab.apply(this, arguments)))));\n            };\n        case 6:\n            return function () {\n                return fg(ef(de(cd(bc(ab.apply(this, arguments))))));\n            };\n        case 7:\n            return function () {\n                return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));\n            };\n        case 8:\n            return function () {\n                return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));\n            };\n        case 9:\n            return function () {\n                return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));\n            };\n    }\n    return;\n}\nexports.flow = flow;\n/**\n * @since 2.0.0\n */\nfunction tuple() {\n    var t = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        t[_i] = arguments[_i];\n    }\n    return t;\n}\nexports.tuple = tuple;\n/**\n * @since 2.0.0\n */\nfunction increment(n) {\n    return n + 1;\n}\nexports.increment = increment;\n/**\n * @since 2.0.0\n */\nfunction decrement(n) {\n    return n - 1;\n}\nexports.decrement = decrement;\n/**\n * @since 2.0.0\n */\nfunction absurd(_) {\n    throw new Error('Called `absurd` function which should be uncallable');\n}\nexports.absurd = absurd;\n/**\n * Creates a tupled version of this function: instead of `n` arguments, it accepts a single tuple argument.\n *\n * @example\n * import { tupled } from 'fp-ts/function'\n *\n * const add = tupled((x: number, y: number): number => x + y)\n *\n * assert.strictEqual(add([1, 2]), 3)\n *\n * @since 2.4.0\n */\nfunction tupled(f) {\n    return function (a) { return f.apply(void 0, a); };\n}\nexports.tupled = tupled;\n/**\n * Inverse function of `tupled`\n *\n * @since 2.4.0\n */\nfunction untupled(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return f(a);\n    };\n}\nexports.untupled = untupled;\nfunction pipe(a, ab, bc, cd, de, ef, fg, gh, hi, ij, jk, kl, lm, mn, no, op, pq, qr, rs, st) {\n    switch (arguments.length) {\n        case 1:\n            return a;\n        case 2:\n            return ab(a);\n        case 3:\n            return bc(ab(a));\n        case 4:\n            return cd(bc(ab(a)));\n        case 5:\n            return de(cd(bc(ab(a))));\n        case 6:\n            return ef(de(cd(bc(ab(a)))));\n        case 7:\n            return fg(ef(de(cd(bc(ab(a))))));\n        case 8:\n            return gh(fg(ef(de(cd(bc(ab(a)))))));\n        case 9:\n            return hi(gh(fg(ef(de(cd(bc(ab(a))))))));\n        case 10:\n            return ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))));\n        case 11:\n            return jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))));\n        case 12:\n            return kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))));\n        case 13:\n            return lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))));\n        case 14:\n            return mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))));\n        case 15:\n            return no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))))));\n        case 16:\n            return op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))))));\n        case 17:\n            return pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))))))));\n        case 18:\n            return qr(pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))))))));\n        case 19:\n            return rs(qr(pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))))))))));\n        case 20:\n            return st(rs(qr(pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))))))))));\n    }\n    return;\n}\nexports.pipe = pipe;\n/**\n * Type hole simulation\n *\n * @since 2.7.0\n */\nexports.hole = absurd;\n/**\n * @internal\n */\nvar bind_ = function (a, name, b) {\n    var _a;\n    return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n};\nexports.bind_ = bind_;\n/**\n * @internal\n */\nvar bindTo_ = function (name) { return function (b) {\n    var _a;\n    return (_a = {}, _a[name] = b, _a);\n}; };\nexports.bindTo_ = bindTo_;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getApplySemigroup = exports.getOrd = exports.getEq = exports.getShow = exports.URI = exports.wilt = exports.wither = exports.sequence = exports.traverse = exports.partitionMap = exports.partition = exports.filterMap = exports.filter = exports.separate = exports.compact = exports.reduceRight = exports.foldMap = exports.reduce = exports.duplicate = exports.extend = exports.throwError = exports.zero = exports.alt = exports.altW = exports.flatten = exports.chainFirst = exports.chain = exports.of = exports.apSecond = exports.apFirst = exports.ap = exports.map = exports.chainNullableK = exports.mapNullable = exports.fromNullableK = exports.getOrElse = exports.getOrElseW = exports.toUndefined = exports.toNullable = exports.fold = exports.fromEither = exports.getRight = exports.getLeft = exports.tryCatch = exports.fromPredicate = exports.fromNullable = exports.some = exports.none = exports.isNone = exports.isSome = void 0;\nexports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.getRefinement = exports.exists = exports.elem = exports.option = exports.MonadThrow = exports.Witherable = exports.Traversable = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.Alt = exports.Foldable = exports.Monad = exports.Applicative = exports.Functor = exports.getMonoid = exports.getLastMonoid = exports.getFirstMonoid = exports.getApplyMonoid = void 0;\nvar function_1 = require(\"./function\");\n// -------------------------------------------------------------------------------------\n// guards\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the option is an instance of `Some`, `false` otherwise.\n *\n * @example\n * import { some, none, isSome } from 'fp-ts/Option'\n *\n * assert.strictEqual(isSome(some(1)), true)\n * assert.strictEqual(isSome(none), false)\n *\n * @category guards\n * @since 2.0.0\n */\nvar isSome = function (fa) { return fa._tag === 'Some'; };\nexports.isSome = isSome;\n/**\n * Returns `true` if the option is `None`, `false` otherwise.\n *\n * @example\n * import { some, none, isNone } from 'fp-ts/Option'\n *\n * assert.strictEqual(isNone(some(1)), false)\n * assert.strictEqual(isNone(none), true)\n *\n * @category guards\n * @since 2.0.0\n */\nvar isNone = function (fa) { return fa._tag === 'None'; };\nexports.isNone = isNone;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * `None` doesn't have a constructor, instead you can use it directly as a value. Represents a missing value.\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.none = { _tag: 'None' };\n/**\n * Constructs a `Some`. Represents an optional value that exists.\n *\n * @category constructors\n * @since 2.0.0\n */\nvar some = function (a) { return ({ _tag: 'Some', value: a }); };\nexports.some = some;\n/**\n * Constructs a new `Option` from a nullable type. If the value is `null` or `undefined`, returns `None`, otherwise\n * returns the value wrapped in a `Some`.\n *\n * @example\n * import { none, some, fromNullable } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(fromNullable(undefined), none)\n * assert.deepStrictEqual(fromNullable(null), none)\n * assert.deepStrictEqual(fromNullable(1), some(1))\n *\n * @category constructors\n * @since 2.0.0\n */\nfunction fromNullable(a) {\n    return a == null ? exports.none : exports.some(a);\n}\nexports.fromNullable = fromNullable;\nfunction fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? exports.some(a) : exports.none); };\n}\nexports.fromPredicate = fromPredicate;\n/**\n * Transforms an exception into an `Option`. If `f` throws, returns `None`, otherwise returns the output wrapped in a\n * `Some`.\n *\n * @example\n * import { none, some, tryCatch } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   tryCatch(() => {\n *     throw new Error()\n *   }),\n *   none\n * )\n * assert.deepStrictEqual(tryCatch(() => 1), some(1))\n *\n * @category constructors\n * @since 2.0.0\n */\nfunction tryCatch(f) {\n    try {\n        return exports.some(f());\n    }\n    catch (e) {\n        return exports.none;\n    }\n}\nexports.tryCatch = tryCatch;\n/**\n * Returns the `Left` value of an `Either` if possible.\n *\n * @example\n * import { getLeft, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getLeft(right(1)), none)\n * assert.deepStrictEqual(getLeft(left('a')), some('a'))\n *\n * @category constructors\n * @since 2.0.0\n */\nfunction getLeft(ma) {\n    return ma._tag === 'Right' ? exports.none : exports.some(ma.left);\n}\nexports.getLeft = getLeft;\n/**\n * Returns the `Right` value of an `Either` if possible.\n *\n * @example\n * import { getRight, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getRight(right(1)), some(1))\n * assert.deepStrictEqual(getRight(left('a')), none)\n *\n * @category constructors\n * @since 2.0.0\n */\nfunction getRight(ma) {\n    return ma._tag === 'Left' ? exports.none : exports.some(ma.right);\n}\nexports.getRight = getRight;\n/**\n * Transforms an `Either` to an `Option` discarding the error.\n *\n * Alias of [getRight](#getRight)\n *\n * Derivable from `MonadThrow`.\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.fromEither = getRight;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Takes a (lazy) default value, a function, and an `Option` value, if the `Option` value is `None` the default value is\n * returned, otherwise the function is applied to the value inside the `Some` and the result is returned.\n *\n * @example\n * import { some, none, fold } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     fold(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a some containing 1'\n * )\n *\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     fold(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a none'\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\nfunction fold(onNone, onSome) {\n    return function (ma) { return (exports.isNone(ma) ? onNone() : onSome(ma.value)); };\n}\nexports.fold = fold;\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `null`.\n *\n * @example\n * import { some, none, toNullable } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toNullable\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toNullable\n *   ),\n *   null\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\nfunction toNullable(ma) {\n    return exports.isNone(ma) ? null : ma.value;\n}\nexports.toNullable = toNullable;\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `undefined`.\n *\n * @example\n * import { some, none, toUndefined } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toUndefined\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toUndefined\n *   ),\n *   undefined\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\nfunction toUndefined(ma) {\n    return exports.isNone(ma) ? undefined : ma.value;\n}\nexports.toUndefined = toUndefined;\n/**\n * Less strict version of [`getOrElse`](#getOrElse).\n *\n * @category destructors\n * @since 2.6.0\n */\nvar getOrElseW = function (onNone) { return function (ma) { return (exports.isNone(ma) ? onNone() : ma.value); }; };\nexports.getOrElseW = getOrElseW;\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns the given default value\n *\n * @example\n * import { some, none, getOrElse } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.getOrElse = exports.getOrElseW;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Returns a *smart constructor* from a function that returns a nullable value.\n *\n * @example\n * import { fromNullableK, none, some } from 'fp-ts/Option'\n *\n * const f = (s: string): number | undefined => {\n *   const n = parseFloat(s)\n *   return isNaN(n) ? undefined : n\n * }\n *\n * const g = fromNullableK(f)\n *\n * assert.deepStrictEqual(g('1'), some(1))\n * assert.deepStrictEqual(g('a'), none)\n *\n * @category combinators\n * @since 2.9.0\n */\nfunction fromNullableK(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return fromNullable(f.apply(void 0, a));\n    };\n}\nexports.fromNullableK = fromNullableK;\n/**\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.mapNullable = chainNullableK;\n/**\n * This is `chain` + `fromNullable`, useful when working with optional values.\n *\n * @example\n * import { some, none, fromNullable, chainNullableK } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Employee {\n *   company?: {\n *     address?: {\n *       street?: {\n *         name?: string\n *       }\n *     }\n *   }\n * }\n *\n * const employee1: Employee = { company: { address: { street: { name: 'high street' } } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee1.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   some('high street')\n * )\n *\n * const employee2: Employee = { company: { address: { street: {} } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee2.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   none\n * )\n *\n * @category combinators\n * @since 2.9.0\n */\nfunction chainNullableK(f) {\n    return function (ma) { return (exports.isNone(ma) ? exports.none : fromNullable(f(ma.value))); };\n}\nexports.chainNullableK = chainNullableK;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar map_ = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\nvar ap_ = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar chain_ = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\nvar reduce_ = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\nvar foldMap_ = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\nvar reduceRight_ = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\nvar traverse_ = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar alt_ = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\nvar filter_ = function (fa, predicate) {\n    return function_1.pipe(fa, exports.filter(predicate));\n};\n/* istanbul ignore next */\nvar filterMap_ = function (fa, f) { return function_1.pipe(fa, exports.filterMap(f)); };\n/* istanbul ignore next */\nvar extend_ = function (wa, f) { return function_1.pipe(wa, exports.extend(f)); };\n/* istanbul ignore next */\nvar partition_ = function (fa, predicate) { return function_1.pipe(fa, exports.partition(predicate)); };\n/* istanbul ignore next */\nvar partitionMap_ = function (fa, f) { return function_1.pipe(fa, exports.partitionMap(f)); };\n/* istanbul ignore next */\nvar wither_ = function (F) {\n    var witherF = exports.wither(F);\n    return function (fa, f) { return function_1.pipe(fa, witherF(f)); };\n};\n/* istanbul ignore next */\nvar wilt_ = function (F) {\n    var wiltF = exports.wilt(F);\n    return function (fa, f) { return function_1.pipe(fa, wiltF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) {\n    return exports.isNone(fa) ? exports.none : exports.some(f(fa.value));\n}; };\nexports.map = map;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nvar ap = function (fa) { return function (fab) {\n    return exports.isNone(fab) ? exports.none : exports.isNone(fa) ? exports.none : exports.some(fab.value(fa.value));\n}; };\nexports.ap = ap;\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nvar apFirst = function (fb) {\n    return function_1.flow(exports.map(function (a) { return function () { return a; }; }), exports.ap(fb));\n};\nexports.apFirst = apFirst;\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nvar apSecond = function (fb) {\n    return function_1.flow(exports.map(function () { return function (b) { return b; }; }), exports.ap(fb));\n};\nexports.apSecond = apSecond;\n/**\n * Wrap a value into the type constructor.\n *\n * @category Applicative\n * @since 2.7.0\n */\nexports.of = exports.some;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nvar chain = function (f) { return function (ma) {\n    return exports.isNone(ma) ? exports.none : f(ma.value);\n}; };\nexports.chain = chain;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.0.0\n */\nvar chainFirst = function (f) {\n    return exports.chain(function (a) {\n        return function_1.pipe(f(a), exports.map(function () { return a; }));\n    });\n};\nexports.chainFirst = chainFirst;\n/**\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) { return function (fa) {\n    return exports.isNone(fa) ? that() : fa;\n}; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Option` returns the left-most non-`None` value.\n *\n * @example\n * import * as O from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some('a'),\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('a')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('b')\n * )\n *\n * @category Alt\n * @since 2.0.0\n */\nexports.alt = exports.altW;\n/**\n * @category Alternative\n * @since 2.7.0\n */\nvar zero = function () { return exports.none; };\nexports.zero = zero;\n/**\n * @category MonadThrow\n * @since 2.7.0\n */\nvar throwError = function () { return exports.none; };\nexports.throwError = throwError;\n/**\n * @category Extend\n * @since 2.0.0\n */\nvar extend = function (f) { return function (wa) {\n    return exports.isNone(wa) ? exports.none : exports.some(f(wa));\n}; };\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * @category Foldable\n * @since 2.0.0\n */\nvar reduce = function (b, f) { return function (fa) {\n    return exports.isNone(fa) ? b : f(b, fa.value);\n}; };\nexports.reduce = reduce;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nvar foldMap = function (M) { return function (f) { return function (fa) {\n    return exports.isNone(fa) ? M.empty : f(fa.value);\n}; }; };\nexports.foldMap = foldMap;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nvar reduceRight = function (b, f) { return function (fa) {\n    return exports.isNone(fa) ? b : f(fa.value, b);\n}; };\nexports.reduceRight = reduceRight;\n/**\n * @category Compactable\n * @since 2.0.0\n */\nexports.compact = exports.flatten;\nvar defaultSeparate = { left: exports.none, right: exports.none };\n/**\n * @category Compactable\n * @since 2.0.0\n */\nvar separate = function (ma) {\n    var o = function_1.pipe(ma, exports.map(function (e) { return ({\n        left: getLeft(e),\n        right: getRight(e)\n    }); }));\n    return exports.isNone(o) ? defaultSeparate : o.value;\n};\nexports.separate = separate;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nvar filter = function (predicate) { return function (fa) { return (exports.isNone(fa) ? exports.none : predicate(fa.value) ? fa : exports.none); }; };\nexports.filter = filter;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nvar filterMap = function (f) { return function (fa) {\n    return exports.isNone(fa) ? exports.none : f(fa.value);\n}; };\nexports.filterMap = filterMap;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nvar partition = function (predicate) { return function (fa) {\n    return {\n        left: filter_(fa, function (a) { return !predicate(a); }),\n        right: filter_(fa, predicate)\n    };\n}; };\nexports.partition = partition;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nvar partitionMap = function (f) { return function_1.flow(exports.map(f), exports.separate); };\nexports.partitionMap = partitionMap;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar traverse = function (F) { return function (f) { return function (ta) { return (exports.isNone(ta) ? F.of(exports.none) : F.map(f(ta.value), exports.some)); }; }; };\nexports.traverse = traverse;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar sequence = function (F) { return function (ta) { return (exports.isNone(ta) ? F.of(exports.none) : F.map(ta.value, exports.some)); }; };\nexports.sequence = sequence;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wither = function (F) { return function (f) { return function (fa) { return (exports.isNone(fa) ? F.of(exports.none) : f(fa.value)); }; }; };\nexports.wither = wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wilt = function (F) { return function (f) { return function (fa) {\n    return exports.isNone(fa)\n        ? F.of({\n            left: exports.none,\n            right: exports.none\n        })\n        : F.map(f(fa.value), function (e) { return ({\n            left: getLeft(e),\n            right: getRight(e)\n        }); });\n}; }; };\nexports.wilt = wilt;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Option';\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getShow(S) {\n    return {\n        show: function (ma) { return (exports.isNone(ma) ? 'none' : \"some(\" + S.show(ma.value) + \")\"); }\n    };\n}\nexports.getShow = getShow;\n/**\n * @example\n * import { none, some, getEq } from 'fp-ts/Option'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * const E = getEq(eqNumber)\n * assert.strictEqual(E.equals(none, none), true)\n * assert.strictEqual(E.equals(none, some(1)), false)\n * assert.strictEqual(E.equals(some(1), none), false)\n * assert.strictEqual(E.equals(some(1), some(2)), false)\n * assert.strictEqual(E.equals(some(1), some(1)), true)\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getEq(E) {\n    return {\n        equals: function (x, y) { return x === y || (exports.isNone(x) ? exports.isNone(y) : exports.isNone(y) ? false : E.equals(x.value, y.value)); }\n    };\n}\nexports.getEq = getEq;\n/**\n * The `Ord` instance allows `Option` values to be compared with\n * `compare`, whenever there is an `Ord` instance for\n * the type the `Option` contains.\n *\n * `None` is considered to be less than any `Some` value.\n *\n *\n * @example\n * import { none, some, getOrd } from 'fp-ts/Option'\n * import { ordNumber } from 'fp-ts/Ord'\n *\n * const O = getOrd(ordNumber)\n * assert.strictEqual(O.compare(none, none), 0)\n * assert.strictEqual(O.compare(none, some(1)), -1)\n * assert.strictEqual(O.compare(some(1), none), 1)\n * assert.strictEqual(O.compare(some(1), some(2)), -1)\n * assert.strictEqual(O.compare(some(1), some(1)), 0)\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getOrd(O) {\n    return {\n        equals: getEq(O).equals,\n        compare: function (x, y) { return (x === y ? 0 : exports.isSome(x) ? (exports.isSome(y) ? O.compare(x.value, y.value) : 1) : -1); }\n    };\n}\nexports.getOrd = getOrd;\n/**\n * `Apply` semigroup\n *\n * | x       | y       | concat(x, y)       |\n * | ------- | ------- | ------------------ |\n * | none    | none    | none               |\n * | some(a) | none    | none               |\n * | none    | some(a) | none               |\n * | some(a) | some(b) | some(concat(a, b)) |\n *\n * @example\n * import { getApplySemigroup, some, none } from 'fp-ts/Option'\n * import { semigroupSum } from 'fp-ts/Semigroup'\n *\n * const S = getApplySemigroup(semigroupSum)\n * assert.deepStrictEqual(S.concat(none, none), none)\n * assert.deepStrictEqual(S.concat(some(1), none), none)\n * assert.deepStrictEqual(S.concat(none, some(1)), none)\n * assert.deepStrictEqual(S.concat(some(1), some(2)), some(3))\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getApplySemigroup(S) {\n    return {\n        concat: function (x, y) { return (exports.isSome(x) && exports.isSome(y) ? exports.some(S.concat(x.value, y.value)) : exports.none); }\n    };\n}\nexports.getApplySemigroup = getApplySemigroup;\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getApplyMonoid(M) {\n    return {\n        concat: getApplySemigroup(M).concat,\n        empty: exports.some(M.empty)\n    };\n}\nexports.getApplyMonoid = getApplyMonoid;\n/**\n * Monoid returning the left-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(a) | some(a)      |\n * | some(a) | some(b) | some(a)      |\n *\n * @example\n * import { getFirstMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getFirstMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(1))\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getFirstMonoid() {\n    return {\n        concat: function (x, y) { return (exports.isNone(x) ? y : x); },\n        empty: exports.none\n    };\n}\nexports.getFirstMonoid = getFirstMonoid;\n/**\n * Monoid returning the right-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(a) | some(a)      |\n * | some(a) | some(b) | some(b)      |\n *\n * @example\n * import { getLastMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getLastMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(2))\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getLastMonoid() {\n    return {\n        concat: function (x, y) { return (exports.isNone(y) ? x : y); },\n        empty: exports.none\n    };\n}\nexports.getLastMonoid = getLastMonoid;\n/**\n * Monoid returning the left-most non-`None` value. If both operands are `Some`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * | x       | y       | concat(x, y)       |\n * | ------- | ------- | ------------------ |\n * | none    | none    | none               |\n * | some(a) | none    | some(a)            |\n * | none    | some(a) | some(a)            |\n * | some(a) | some(b) | some(concat(a, b)) |\n *\n * @example\n * import { getMonoid, some, none } from 'fp-ts/Option'\n * import { semigroupSum } from 'fp-ts/Semigroup'\n *\n * const M = getMonoid(semigroupSum)\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(3))\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getMonoid(S) {\n    return {\n        concat: function (x, y) { return (exports.isNone(x) ? y : exports.isNone(y) ? x : exports.some(S.concat(x.value, y.value))); },\n        empty: exports.none\n    };\n}\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: map_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: map_,\n    ap: ap_,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: map_,\n    ap: ap_,\n    of: exports.of,\n    chain: chain_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: map_,\n    alt: alt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alternative = {\n    URI: exports.URI,\n    map: map_,\n    ap: ap_,\n    of: exports.of,\n    alt: alt_,\n    zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: map_,\n    extend: extend_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: map_,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: map_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Witherable = {\n    URI: exports.URI,\n    map: map_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: exports.sequence,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    wither: wither_,\n    wilt: wilt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.MonadThrow = {\n    URI: exports.URI,\n    map: map_,\n    ap: ap_,\n    of: exports.of,\n    chain: chain_,\n    throwError: exports.throwError\n};\n// TODO: remove in v3\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.option = {\n    URI: exports.URI,\n    map: map_,\n    of: exports.of,\n    ap: ap_,\n    chain: chain_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: exports.sequence,\n    zero: exports.zero,\n    alt: alt_,\n    extend: extend_,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    wither: wither_,\n    wilt: wilt_,\n    throwError: exports.throwError\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if `ma` contains `a`\n *\n * @example\n * import { some, none, elem } from 'fp-ts/Option'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * assert.strictEqual(elem(eqNumber)(1, some(1)), true)\n * assert.strictEqual(elem(eqNumber)(2, some(1)), false)\n * assert.strictEqual(elem(eqNumber)(1, none), false)\n *\n * @since 2.0.0\n */\nfunction elem(E) {\n    return function (a, ma) { return (exports.isNone(ma) ? false : E.equals(a, ma.value)); };\n}\nexports.elem = elem;\n/**\n * Returns `true` if the predicate is satisfied by the wrapped value\n *\n * @example\n * import { some, none, exists } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 0)\n *   ),\n *   true\n * )\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 1)\n *   ),\n *   false\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     exists(n => n > 0)\n *   ),\n *   false\n * )\n *\n * @since 2.0.0\n */\nfunction exists(predicate) {\n    return function (ma) { return (exports.isNone(ma) ? false : predicate(ma.value)); };\n}\nexports.exists = exists;\n/**\n * Returns a `Refinement` (i.e. a custom type guard) from a `Option` returning function.\n * This function ensures that a custom type guard definition is type-safe.\n *\n * ```ts\n * import { some, none, getRefinement } from 'fp-ts/Option'\n *\n * type A = { type: 'A' }\n * type B = { type: 'B' }\n * type C = A | B\n *\n * const isA = (c: C): c is A => c.type === 'B' // <= typo but typescript doesn't complain\n * const isA = getRefinement<C, A>(c => (c.type === 'B' ? some(c) : none)) // static error: Type '\"B\"' is not assignable to type '\"A\"'\n * ```\n *\n * @since 2.0.0\n */\nfunction getRefinement(getOption) {\n    return function (a) { return exports.isSome(getOption(a)); };\n}\nexports.getRefinement = getRefinement;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of({});\n/**\n * @since 2.8.0\n */\nvar bindTo = function (name) { return exports.map(function_1.bindTo_(name)); };\nexports.bindTo = bindTo;\n/**\n * @since 2.8.0\n */\nvar bind = function (name, f) {\n    return exports.chain(function (a) {\n        return function_1.pipe(f(a), exports.map(function (b) { return function_1.bind_(a, name, b); }));\n    });\n};\nexports.bind = bind;\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nvar apS = function (name, fb) {\n    return function_1.flow(exports.map(function (a) { return function (b) { return function_1.bind_(a, name, b); }; }), exports.ap(fb));\n};\nexports.apS = apS;\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n *\n * @since 2.9.0\n */\nvar traverseArrayWithIndex = function (f) { return function (arr) {\n    // tslint:disable-next-line: readonly-array\n    var result = [];\n    for (var i = 0; i < arr.length; i++) {\n        var b = f(i, arr[i]);\n        if (exports.isNone(b)) {\n            return exports.none;\n        }\n        result.push(b.value);\n    }\n    return exports.some(result);\n}; };\nexports.traverseArrayWithIndex = traverseArrayWithIndex;\n/**\n * Runs an action for every element in array and accumulates the results in option\n *\n * this function has the same behavior of `A.sequence(O.option)` but it's optimized and performs better\n *\n * @example\n *\n * import * as A from 'fp-ts/Array'\n * import { traverseArray, some, fromPredicate, none } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * const arr = A.range(0, 10)\n * assert.deepStrictEqual(pipe(arr, traverseArray(some)), some(arr))\n * assert.deepStrictEqual(pipe(arr, traverseArray(fromPredicate((x) => x > 5))), none)\n *\n * @since 2.9.0\n */\nvar traverseArray = function (f) { return exports.traverseArrayWithIndex(function (_, a) { return f(a); }); };\nexports.traverseArray = traverseArray;\n/**\n * get an array of option and convert it to option of array\n *\n * this function has the same behavior of `A.sequence(O.option)` but it's optimized and performs better\n *\n * @example\n *\n * import * as A from 'fp-ts/Array'\n * import { sequenceArray, some, none, fromPredicate } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * const arr = A.range(0, 10)\n * assert.deepStrictEqual(pipe(arr, A.map(some), sequenceArray), some(arr))\n * assert.deepStrictEqual(pipe(arr, A.map(fromPredicate(x => x > 8)), sequenceArray), none)\n *\n * @since 2.9.0\n */\nexports.sequenceArray = \n/*#__PURE__*/\nexports.traverseArray(function_1.identity);\n","import { Vector2 } from \"./types\";\n\nexport const pathPolygon = (ctx: CanvasRenderingContext2D, polygon: Vector2[]) => {\n\tpathPolyline(ctx, polygon);\n\tctx.closePath();\n};\n\nexport const pathPolyline = (ctx: CanvasRenderingContext2D, polyline: Vector2[]) => {\n\tctx.beginPath();\n\tctx.moveTo(...polyline[0]);\n\tpolyline.slice(1).map(point => ctx.lineTo(...point));\n};\n\nexport function drawDisc(ctx: CanvasRenderingContext2D, point: Vector2, radius: number, style?: Partial<CanvasRenderingContext2D>) {\n\tif (style) {\n\t\tObject.assign(ctx, style);\n\t}\n\tctx.beginPath();\n\tctx.arc(point[0], point[1], radius, 0, Math.PI * 2);\n\tctx.fill();\n}","import { Vector2, Vector3 } from \"./types\";\r\n\r\ntype Vec3 = [number, number, number];\r\n\r\nexport const add = (a: Vec3, b: Vec3): Vec3 => [\r\n    a[0] + b[0],\r\n    a[1] + b[1],\r\n    a[2] + b[2]\r\n];\r\nexport function sum(vectors: Vec3[]): Vec3 {\r\n\tlet sum: Vector3 = [0, 0, 0];\r\n\tfor (const vec of vectors){\r\n\t\tsum[0] += vec[0];\r\n\t\tsum[1] += vec[1];\r\n\t\tsum[2] += vec[2];\r\n\t}\r\n\treturn sum;\r\n}\r\nexport const multiply = (vector: Vec3, scalar: number): Vec3 => [\r\n    vector[0] * scalar,\r\n    vector[1] * scalar,\r\n    vector[2] * scalar\r\n];\r\nexport const subtract = (a: Vec3, b: Vec3): Vec3 => add(a, multiply(b, -1));\r\nexport const divide = (vector: Vec3, denominator: number) => multiply(vector, 1 / denominator);\r\n\r\nexport const isZero = (vector: Vec3): boolean => vector.every(component => component === 0);\r\nexport const equal = (a: Vec3, b: Vec3): boolean => isZero(subtract(a, b));\r\nexport const magnitude = (vector: Vec3): number => Math.hypot(...vector);\r\nexport const sqrdMagnitude = (v: Vec3): number => v[0]**2 + v[1]**2 + v[2]**2;\r\nexport const normalize = (vector: Vec3): Vec3 => isZero(vector) ? [0, 0, 0] : divide(vector, magnitude(vector));\r\nexport const distance = (a: Vec3, b: Vec3): number => magnitude(subtract(a, b));\r\nexport const dot = (a: Vec3, b: Vec3): number => a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\nexport const cross = (a: Vec3, b: Vec3): Vec3 => [\r\n    a[1] * b[2] - b[1] * a[2],\r\n    a[2] * b[0] - b[2] * a[0],\r\n    a[0] * b[1] - b[0] * a[1]\r\n];\r\nexport const project = (normal: Vector3, point: Vector3): Vector3 => {\r\n\treturn multiply(normal, dot(normal, point));\r\n};\r\nexport const interpolate = (a: Vec3, b: Vec3, t: number): Vec3 => add(a, multiply(subtract(b, a), t));\r\nexport const round = (v: Vector3): Vector3 => v.map(Math.round) as Vector3;","import * as Vec3 from \"./vec3\";\r\nimport { Matrix3, Vector3 } from './types';\r\n\r\nexport const identity: Matrix3 = [1, 0, 0, 0, 1, 0, 0, 0, 1];\r\n\r\nexport const multiplyVector = (matrix: Matrix3, vector: Vector3) : Vector3 => [\r\n    matrix[0] * vector[0] + matrix[3] * vector[1] + matrix[6] * vector[2],\r\n    matrix[1] * vector[0] + matrix[4] * vector[1] + matrix[7] * vector[2],\r\n    matrix[2] * vector[0] + matrix[5] * vector[1] + matrix[8] * vector[2]\r\n];\r\nexport const multiplyMatrix = (a: Matrix3, b: Matrix3): Matrix3 => [\r\n    ...multiplyVector(a, b.slice(0, 3) as Vector3),\r\n    ...multiplyVector(a, b.slice(3, 6) as Vector3),\r\n    ...multiplyVector(a, b.slice(6, 9) as Vector3),\r\n] as Matrix3;\r\n\r\nexport const inverse = (matrix: Matrix3): Matrix3 => {\r\n    const [a, b, c, d, e, f, g, h, i] = matrix;\r\n    const vals = [\r\n        e * i - f * h, f * g - i * d, h * d - g * e,\r\n        b * i - c * h, c * g - a * i, h * a - g * b,\r\n        e * c - f * b, f * a - d * c, b * d - a * e\r\n    ];\r\n    const m = 1 / (a * vals[0] + b * vals[1] + c * vals[2]);\r\n    const n = 1 / (d * vals[3] + e * vals[4] + f * vals[5]);\r\n    const o = 1 / (g * vals[6] + h * vals[7] + i * vals[8]);\r\n\r\n    return [\r\n        vals[0] * m, vals[3] * n, vals[6] * o,\r\n        vals[1] * m, vals[4] * n, vals[7] * o,\r\n        vals[2] * m, vals[5] * n, vals[8] * o\r\n    ];\r\n};\r\n\r\nconst rotateVector = (axis: Vector3, angle: number) => ((vec: Vector3) => {\r\n    const sinDir = Vec3.normalize(Vec3.cross(axis, vec));\r\n    const axisCenter = Vec3.multiply(axis, Vec3.dot(axis, vec));\r\n    const cosDir = Vec3.normalize(Vec3.subtract(vec, axisCenter));\r\n    const [sin, cos] = [Math.sin(angle), Math.cos(angle)];\r\n    const radius = Vec3.distance(axisCenter, vec);\r\n    return Vec3.add(axisCenter, Vec3.multiply(Vec3.add(Vec3.multiply(sinDir, sin), Vec3.multiply(cosDir, cos)), radius));\r\n});\r\nexport const rotation = (vector: Vector3) : Matrix3 => {\r\n    if (Vec3.isZero(vector)){\r\n        return identity;\r\n    }\r\n    const axis = Vec3.normalize(vector);\r\n    const angle = Vec3.magnitude(vector);\r\n    const rotateFunc = rotateVector(axis, angle);\r\n    return [\r\n        ...rotateFunc([1, 0, 0]),\r\n        ...rotateFunc([0, 1, 0]),\r\n        ...rotateFunc([0, 0, 1])\r\n    ] as Matrix3;\r\n};","import { inverse, multiplyMatrix, rotation } from \"../../lib/mat3x3\";\nimport { Transform } from \"../../lib/transform\";\nimport { Matrix3, Vector3 } from \"../../lib/types\";\nimport { Camera } from \"./camera\";\nimport * as Vec3 from '../../lib/vec3';\n\nexport type OrbitCamera = {\n\tradius: number,\n\tlatitude: number,\n\tlongitude: number,\n};\n\nfunction calculateOrientation(orbitCam: OrbitCamera): Matrix3 {\n\tconst rotationMatrix1 = rotation([0, orbitCam.longitude, 0]);\n\tconst rotationMatrix2 = rotation([orbitCam.latitude, 0, 0]);\n\treturn multiplyMatrix(rotationMatrix1, rotationMatrix2);\n}\n\nfunction calculateTransform(orbitCam: OrbitCamera): Transform {\n\tconst orientation = calculateOrientation(orbitCam);\n\tconst forward = orientation.slice(6) as Vector3;\n\tconst position = Vec3.multiply(forward, -orbitCam.radius);\n\treturn { position, orientation }\n}\n\nexport function toRegularCamera(orbitCam: OrbitCamera): Camera {\n\tconst transform = calculateTransform(orbitCam);\n\treturn {\n\t\ttransform, \n\t\tinverseMatrix: inverse(transform.orientation)\n\t}\n}","import { Vector3 } from \"../../lib/types\";\n\nexport type VoxelFaceNormal = [1, 0, 0] | [-1, 0, 0] | [0, 1, 0] | [0, -1, 0] | [0, 0, 1] | [0, 0, -1];\nexport const voxelFaceNormals: VoxelFaceNormal[] = [\n\t[1, 0, 0], [-1, 0, 0], [0, 1, 0], [0, -1, 0], [0, 0, 1], [0, 0, -1]\n];\n\nexport function getNonZeroIndex(normal: VoxelFaceNormal): number {\n\tfor (let i = 0; i < 3; i++){\n\t\tif (normal[i] !== 0) return i;\n\t}\n}\n\nexport type VoxelFace = {\n\tposition: Vector3, \n\tnormal: VoxelFaceNormal\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.invert = exports.monoidOrdering = exports.semigroupOrdering = exports.eqOrdering = exports.sign = void 0;\n/**\n * @since 2.0.0\n */\nfunction sign(n) {\n    return n <= -1 ? -1 : n >= 1 ? 1 : 0;\n}\nexports.sign = sign;\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.eqOrdering = {\n    equals: function (x, y) { return x === y; }\n};\n/**\n * Use `monoidOrdering` instead\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupOrdering = {\n    concat: function (x, y) { return (x !== 0 ? x : y); }\n};\n/**\n * @category instances\n * @since 2.4.0\n */\nexports.monoidOrdering = {\n    // tslint:disable-next-line: deprecation\n    concat: exports.semigroupOrdering.concat,\n    empty: 0\n};\n/**\n * @since 2.0.0\n */\nfunction invert(O) {\n    switch (O) {\n        case -1:\n            return 1;\n        case 1:\n            return -1;\n        default:\n            return 0;\n    }\n}\nexports.invert = invert;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ord = exports.Contravariant = exports.ordDate = exports.URI = exports.contramap = exports.getDualOrd = exports.getTupleOrd = exports.getMonoid = exports.getSemigroup = exports.fromCompare = exports.between = exports.clamp = exports.max = exports.min = exports.geq = exports.leq = exports.gt = exports.lt = exports.ordBoolean = exports.ordNumber = exports.ordString = void 0;\nvar Ordering_1 = require(\"./Ordering\");\nvar function_1 = require(\"./function\");\n// default compare for primitive types\nfunction compare(x, y) {\n    return x < y ? -1 : x > y ? 1 : 0;\n}\nfunction strictEqual(a, b) {\n    return a === b;\n}\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.ordString = {\n    equals: strictEqual,\n    compare: compare\n};\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.ordNumber = {\n    equals: strictEqual,\n    compare: compare\n};\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.ordBoolean = {\n    equals: strictEqual,\n    compare: compare\n};\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly less than_ another\n *\n * @since 2.0.0\n */\nfunction lt(O) {\n    return function (x, y) { return O.compare(x, y) === -1; };\n}\nexports.lt = lt;\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly greater than_ another\n *\n * @since 2.0.0\n */\nfunction gt(O) {\n    return function (x, y) { return O.compare(x, y) === 1; };\n}\nexports.gt = gt;\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly less than_ another\n *\n * @since 2.0.0\n */\nfunction leq(O) {\n    return function (x, y) { return O.compare(x, y) !== 1; };\n}\nexports.leq = leq;\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly greater than_ another\n *\n * @since 2.0.0\n */\nfunction geq(O) {\n    return function (x, y) { return O.compare(x, y) !== -1; };\n}\nexports.geq = geq;\n// TODO: curry in v3\n/**\n * Take the minimum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nfunction min(O) {\n    return function (x, y) { return (O.compare(x, y) === 1 ? y : x); };\n}\nexports.min = min;\n// TODO: curry in v3\n/**\n * Take the maximum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nfunction max(O) {\n    return function (x, y) { return (O.compare(x, y) === -1 ? y : x); };\n}\nexports.max = max;\n/**\n * Clamp a value between a minimum and a maximum\n *\n * @since 2.0.0\n */\nfunction clamp(O) {\n    var minO = min(O);\n    var maxO = max(O);\n    return function (low, hi) { return function (x) { return maxO(minO(x, hi), low); }; };\n}\nexports.clamp = clamp;\n/**\n * Test whether a value is between a minimum and a maximum (inclusive)\n *\n * @since 2.0.0\n */\nfunction between(O) {\n    var lessThanO = lt(O);\n    var greaterThanO = gt(O);\n    return function (low, hi) { return function (x) { return (lessThanO(x, low) || greaterThanO(x, hi) ? false : true); }; };\n}\nexports.between = between;\n/**\n * @category constructors\n * @since 2.0.0\n */\nfunction fromCompare(compare) {\n    var optimizedCompare = function (x, y) { return (x === y ? 0 : compare(x, y)); };\n    return {\n        equals: function (x, y) { return optimizedCompare(x, y) === 0; },\n        compare: optimizedCompare\n    };\n}\nexports.fromCompare = fromCompare;\n/**\n * Use `getMonoid` instead\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nfunction getSemigroup() {\n    return {\n        concat: function (x, y) { return fromCompare(function (a, b) { return Ordering_1.monoidOrdering.concat(x.compare(a, b), y.compare(a, b)); }); }\n    };\n}\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` such that:\n *\n * - its `concat(ord1, ord2)` operation will order first by `ord1`, and then by `ord2`\n * - its `empty` value is an `Ord` that always considers compared elements equal\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import { contramap, getDualOrd, getMonoid, ordBoolean, ordNumber, ordString } from 'fp-ts/Ord'\n * import { pipe } from 'fp-ts/function'\n * import { fold } from 'fp-ts/Monoid'\n *\n * interface User {\n *   id: number\n *   name: string\n *   age: number\n *   rememberMe: boolean\n * }\n *\n * const byName = pipe(\n *   ordString,\n *   contramap((p: User) => p.name)\n * )\n *\n * const byAge = pipe(\n *   ordNumber,\n *   contramap((p: User) => p.age)\n * )\n *\n * const byRememberMe = pipe(\n *   ordBoolean,\n *   contramap((p: User) => p.rememberMe)\n * )\n *\n * const M = getMonoid<User>()\n *\n * const users: Array<User> = [\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true }\n * ]\n *\n * // sort by name, then by age, then by `rememberMe`\n * const O1 = fold(M)([byName, byAge, byRememberMe])\n * assert.deepStrictEqual(sort(O1)(users), [\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * // now `rememberMe = true` first, then by name, then by age\n * const O2 = fold(M)([getDualOrd(byRememberMe), byName, byAge])\n * assert.deepStrictEqual(sort(O2)(users), [\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * @category instances\n * @since 2.4.0\n */\nfunction getMonoid() {\n    return {\n        // tslint:disable-next-line: deprecation\n        concat: getSemigroup().concat,\n        empty: fromCompare(function () { return 0; })\n    };\n}\nexports.getMonoid = getMonoid;\n/**\n * Given a tuple of `Ord`s returns an `Ord` for the tuple\n *\n * @example\n * import { getTupleOrd, ordString, ordNumber, ordBoolean } from 'fp-ts/Ord'\n *\n * const O = getTupleOrd(ordString, ordNumber, ordBoolean)\n * assert.strictEqual(O.compare(['a', 1, true], ['b', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 1, false]), 1)\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getTupleOrd() {\n    var ords = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        ords[_i] = arguments[_i];\n    }\n    var len = ords.length;\n    return fromCompare(function (x, y) {\n        var i = 0;\n        for (; i < len - 1; i++) {\n            var r = ords[i].compare(x[i], y[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return ords[i].compare(x[i], y[i]);\n    });\n}\nexports.getTupleOrd = getTupleOrd;\n/**\n * @category combinators\n * @since 2.0.0\n */\nfunction getDualOrd(O) {\n    return fromCompare(function (x, y) { return O.compare(y, x); });\n}\nexports.getDualOrd = getDualOrd;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return function_1.pipe(fa, exports.contramap(f)); };\n// -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n/**\n * @category Contravariant\n * @since 2.0.0\n */\nvar contramap = function (f) { return function (fa) {\n    return fromCompare(function (x, y) { return fa.compare(f(x), f(y)); });\n}; };\nexports.contramap = contramap;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Ord';\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.ordDate = \n/*#__PURE__*/\nfunction_1.pipe(exports.ordNumber, \n/*#__PURE__*/\nexports.contramap(function (date) { return date.valueOf(); }));\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Contravariant = {\n    URI: exports.URI,\n    contramap: contramap_\n};\n// TODO: remove in v3\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.ord = exports.Contravariant;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getIntercalateSemigroup = exports.semigroupVoid = exports.semigroupString = exports.semigroupProduct = exports.semigroupSum = exports.semigroupAny = exports.semigroupAll = exports.getObjectSemigroup = exports.getJoinSemigroup = exports.getMeetSemigroup = exports.getStructSemigroup = exports.getFunctionSemigroup = exports.getDualSemigroup = exports.getTupleSemigroup = exports.getLastSemigroup = exports.getFirstSemigroup = exports.fold = void 0;\n/**\n * If a type `A` can form a `Semigroup` it has an **associative** binary operation.\n *\n * ```ts\n * interface Semigroup<A> {\n *   readonly concat: (x: A, y: A) => A\n * }\n * ```\n *\n * Associativity means the following equality must hold for any choice of `x`, `y`, and `z`.\n *\n * ```ts\n * concat(x, concat(y, z)) = concat(concat(x, y), z)\n * ```\n *\n * A common example of a semigroup is the type `string` with the operation `+`.\n *\n * ```ts\n * import { Semigroup } from 'fp-ts/Semigroup'\n *\n * const semigroupString: Semigroup<string> = {\n *   concat: (x, y) => x + y\n * }\n *\n * const x = 'x'\n * const y = 'y'\n * const z = 'z'\n *\n * semigroupString.concat(x, y) // 'xy'\n *\n * semigroupString.concat(x, semigroupString.concat(y, z)) // 'xyz'\n *\n * semigroupString.concat(semigroupString.concat(x, y), z) // 'xyz'\n * ```\n *\n * *Adapted from https://typelevel.org/cats*\n *\n * @since 2.0.0\n */\nvar function_1 = require(\"./function\");\nvar Ord_1 = require(\"./Ord\");\nfunction fold(S) {\n    return function (startWith, as) {\n        if (as === undefined) {\n            var foldS_1 = fold(S);\n            return function (as) { return foldS_1(startWith, as); };\n        }\n        return as.reduce(S.concat, startWith);\n    };\n}\nexports.fold = fold;\n/**\n * Always return the first argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.getFirstSemigroup<number>().concat(1, 2), 1)\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getFirstSemigroup() {\n    return { concat: function_1.identity };\n}\nexports.getFirstSemigroup = getFirstSemigroup;\n/**\n * Always return the last argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.getLastSemigroup<number>().concat(1, 2), 2)\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getLastSemigroup() {\n    return { concat: function (_, y) { return y; } };\n}\nexports.getLastSemigroup = getLastSemigroup;\n/**\n * Given a tuple of semigroups returns a semigroup for the tuple.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.getTupleSemigroup(S.semigroupString, S.semigroupSum)\n * assert.deepStrictEqual(S1.concat(['a', 1], ['b', 2]), ['ab', 3])\n *\n * const S2 = S.getTupleSemigroup(S.semigroupString, S.semigroupSum, S.semigroupAll)\n * assert.deepStrictEqual(S2.concat(['a', 1, true], ['b', 2, false]), ['ab', 3, false])\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getTupleSemigroup() {\n    var semigroups = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        semigroups[_i] = arguments[_i];\n    }\n    return {\n        concat: function (x, y) { return semigroups.map(function (s, i) { return s.concat(x[i], y[i]); }); }\n    };\n}\nexports.getTupleSemigroup = getTupleSemigroup;\n/**\n * The dual of a `Semigroup`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.getDualSemigroup(S.semigroupString).concat('a', 'b'), 'ba')\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getDualSemigroup(S) {\n    return {\n        concat: function (x, y) { return S.concat(y, x); }\n    };\n}\nexports.getDualSemigroup = getDualSemigroup;\n/**\n * Unary functions form a semigroup as long as you can provide a semigroup for the codomain.\n *\n * @example\n * import { Predicate } from 'fp-ts/function'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const S1 = S.getFunctionSemigroup(S.semigroupAll)<number>()\n *\n * assert.deepStrictEqual(S1.concat(f, g)(1), true)\n * assert.deepStrictEqual(S1.concat(f, g)(3), false)\n *\n * const S2 = S.getFunctionSemigroup(S.semigroupAny)<number>()\n *\n * assert.deepStrictEqual(S2.concat(f, g)(1), true)\n * assert.deepStrictEqual(S2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getFunctionSemigroup(S) {\n    return function () { return ({\n        concat: function (f, g) { return function (a) { return S.concat(f(a), g(a)); }; }\n    }); };\n}\nexports.getFunctionSemigroup = getFunctionSemigroup;\n/**\n * Given a struct of semigroups returns a semigroup for the struct.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * interface Point {\n *   readonly x: number\n *   readonly y: number\n * }\n *\n * const semigroupPoint = S.getStructSemigroup<Point>({\n *   x: S.semigroupSum,\n *   y: S.semigroupSum\n * })\n *\n * assert.deepStrictEqual(semigroupPoint.concat({ x: 1, y: 2 }, { x: 3, y: 4 }), { x: 4, y: 6 })\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getStructSemigroup(semigroups) {\n    return {\n        concat: function (x, y) {\n            var r = {};\n            for (var _i = 0, _a = Object.keys(semigroups); _i < _a.length; _i++) {\n                var key = _a[_i];\n                r[key] = semigroups[key].concat(x[key], y[key]);\n            }\n            return r;\n        }\n    };\n}\nexports.getStructSemigroup = getStructSemigroup;\n/**\n * Get a semigroup where `concat` will return the minimum, based on the provided order.\n *\n * @example\n * import * as O from 'fp-ts/Ord'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.getMeetSemigroup(O.ordNumber)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 1)\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getMeetSemigroup(O) {\n    return {\n        concat: Ord_1.min(O)\n    };\n}\nexports.getMeetSemigroup = getMeetSemigroup;\n/**\n * Get a semigroup where `concat` will return the maximum, based on the provided order.\n *\n * @example\n * import * as O from 'fp-ts/Ord'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.getJoinSemigroup(O.ordNumber)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 2)\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getJoinSemigroup(O) {\n    return {\n        concat: Ord_1.max(O)\n    };\n}\nexports.getJoinSemigroup = getJoinSemigroup;\n/**\n * Return a semigroup for objects, preserving their type.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const S1 = S.getObjectSemigroup<Person>()\n * assert.deepStrictEqual(S1.concat({ name: 'name', age: 23 }, { name: 'name', age: 24 }), { name: 'name', age: 24 })\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getObjectSemigroup() {\n    return {\n        concat: function (x, y) { return Object.assign({}, x, y); }\n    };\n}\nexports.getObjectSemigroup = getObjectSemigroup;\n/**\n * `boolean` semigroup under conjunction.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.semigroupAll.concat(true, true), true)\n * assert.deepStrictEqual(S.semigroupAll.concat(true, false), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexports.semigroupAll = {\n    concat: function (x, y) { return x && y; }\n};\n/**\n * `boolean` semigroup under disjunction.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.semigroupAny.concat(true, true), true)\n * assert.deepStrictEqual(S.semigroupAny.concat(true, false), true)\n * assert.deepStrictEqual(S.semigroupAny.concat(false, false), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexports.semigroupAny = {\n    concat: function (x, y) { return x || y; }\n};\n/**\n * `number` semigroup under addition.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.semigroupSum.concat(2, 3), 5)\n *\n * @category instances\n * @since 2.0.0\n */\nexports.semigroupSum = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * `number` semigroup under multiplication.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.semigroupProduct.concat(2, 3), 6)\n *\n * @category instances\n * @since 2.0.0\n */\nexports.semigroupProduct = {\n    concat: function (x, y) { return x * y; }\n};\n/**\n * `string` semigroup under concatenation.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.semigroupString.concat('a', 'b'), 'ab')\n *\n * @category instances\n * @since 2.0.0\n */\nexports.semigroupString = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.semigroupVoid = {\n    concat: function () { return undefined; }\n};\n/**\n * You can glue items between and stay associative.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.getIntercalateSemigroup(' ')(S.semigroupString)\n *\n * assert.strictEqual(S1.concat('a', 'b'), 'a b')\n * assert.strictEqual(S1.concat(S1.concat('a', 'b'), 'c'), S1.concat('a', S1.concat('b', 'c')))\n *\n * @category instances\n * @since 2.5.0\n */\nfunction getIntercalateSemigroup(a) {\n    return function (S) { return ({\n        concat: function (x, y) { return S.concat(x, S.concat(a, y)); }\n    }); };\n}\nexports.getIntercalateSemigroup = getIntercalateSemigroup;\n","import { Vector2, Vector3 } from \"../../lib/types\";\nimport { VoxelFaceNormal, voxelFaceNormals } from \"./voxel-face\";\nimport { Option, isNone, isSome, some, none } from 'fp-ts/lib/Option';\nimport { Semigroup, getMeetSemigroup, fold } from 'fp-ts/lib/Semigroup';\nimport { ordNumber, contramap } from 'fp-ts/lib/Ord'\nimport * as Vec3 from '../../lib/vec3';\nimport { Camera } from \"../camera/camera\";\nimport { PerspectiveCamera } from \"../camera/perspective-camera\";\nimport { multiplyVector } from \"../../lib/mat3x3\";\n\nexport type Ray = {\n\torigin: Vector3, \n\tvector: Vector3\n};\n\nexport type RaycastResult = {\n\tdistance: number,\n\tlocalPoint: Vector3, \n\tglobalPoint: Vector3,  \n\tfaceNormal: VoxelFaceNormal, \n\tvoxel: Vector3, \n};\n\nconst raycastSemigroup: Semigroup<RaycastResult> = getMeetSemigroup(\n\tcontramap((r: RaycastResult) => r.distance)(ordNumber)\n);\n\n//[alongAxis, alongPlane]\nfunction decompose(v: Vector3, axis: Vector3): [Vector3, Vector3] {\n\tconst alongAxis = Vec3.project(axis, v);\n\treturn [alongAxis, Vec3.subtract(v, alongAxis)];\n}\n\nfunction isPointOutsideVoxel([x, y, z]: Vector3): boolean {\n\treturn x < -0.5 || x > +0.5 || y < -0.5 || y > +0.5 || z < -0.5 || z > +0.5;\n}\n\nexport function raycastPlane(localRay: Ray, planeOrigin: Vector3, normal: VoxelFaceNormal): Option<Vector3> {\n\tconst { origin, vector } = localRay;\n\tconst relOrigin = Vec3.subtract(origin, planeOrigin);\n\tconst originCombination = decompose(relOrigin, normal);\n\tconst vectorCombination = decompose(vector, normal);\n\tif (Vec3.dot(originCombination[0], vectorCombination[0]) >= 0) return none;\n\tconst planeStartPoint = Vec3.subtract(relOrigin, originCombination[0]);\n\tconst intersectionScale = Vec3.magnitude(originCombination[0]) / Vec3.magnitude(vectorCombination[0]);\n\tconst intersectionPoint = Vec3.add(\n\t\tplaneOrigin,\n\t\tVec3.add(\n\t\t\tplaneStartPoint,\n\t\t\tVec3.multiply(vectorCombination[1], intersectionScale)\n\t\t)\n\t);\n\treturn some(intersectionPoint);\n}\n\nfunction raycastVoxelFace(localRayOrigin: Vector3, rayVector: Vector3, normal: VoxelFaceNormal): Option<Vector3> {\n\tconst faceOrigin = Vec3.multiply(normal, 0.5);\n\tconst planeIntersectionOpt = raycastPlane(\n\t\t{ origin: localRayOrigin, vector: rayVector }, \n\t\tfaceOrigin, normal\n\t);\n\tif (isNone(planeIntersectionOpt)) return none;\n\tconst intersectionPoint = planeIntersectionOpt.value;\n\tif (isPointOutsideVoxel(intersectionPoint)) return none;\n\treturn planeIntersectionOpt;\n}\n\nfunction foldRaycastResults(results: Option<RaycastResult>[]): Option<RaycastResult> {\n\tconst filteredResults = results.filter(isSome).map(r => r.value);\n\tif (filteredResults.length === 0) return none;\n\treturn some(\n\t\tfold(raycastSemigroup)(filteredResults[0], filteredResults.slice(1))\n\t)\n}\n\nfunction isSphereHit(ray: Ray, spherePosition: Vector3, sphereRadius: number): boolean {\n\tconst rayOriginToSphere = Vec3.subtract(spherePosition, ray.origin);\n\tconst rayComponent = Vec3.project(\n\t\tVec3.normalize(ray.vector), \n\t\trayOriginToSphere\n\t);\n\tconst orthoDistSqrd = Vec3.sqrdMagnitude(rayOriginToSphere) - Vec3.sqrdMagnitude(rayComponent);\n\treturn orthoDistSqrd < sphereRadius**2;\n}\n\nexport const raycastVoxel = (ray: Ray) => (voxel: Vector3): Option<RaycastResult> => {\n\tif (!isSphereHit(ray, [0, 0, 0], 1.75)) return none;\n\tconst localOrigin = Vec3.subtract(ray.origin, voxel);\n\treturn foldRaycastResults(\n\t\tvoxelFaceNormals.map(\n\t\t\tfaceNormal => {\n\t\t\t\tconst curResult = raycastVoxelFace(localOrigin, ray.vector, faceNormal);\n\t\t\t\tif (isNone(curResult)) return none;\n\t\t\t\tconst localPoint = curResult.value;\n\t\t\t\treturn some({\n\t\t\t\t\tlocalPoint,\n\t\t\t\t\tglobalPoint: Vec3.add(voxel, localPoint),\n\t\t\t\t\tvoxel, faceNormal, \n\t\t\t\t\tdistance: Vec3.distance(localOrigin, localPoint)\n\t\t\t\t})\n\t\t\t}\n\t\t)\n\t)\n}\n\nexport function raycastVoxels(ray: Ray, voxels: Vector3[]): Option<RaycastResult> {\n\tconst allResults = voxels.map(raycastVoxel(ray));\n\tconst filteredResults = allResults.filter(isSome).map(r => r.value);\n\tif (filteredResults.length === 0) return none;\n\treturn some(\n\t\tfold(raycastSemigroup)(filteredResults[0], filteredResults.slice(1))\n\t)\n}\n\n\nexport function createCameraRay(camera: Camera): Ray {\n\tconst { transform } = camera;\n\treturn {\n\t\torigin: transform.position,\n\t\tvector: transform.orientation.slice(6) as Vector3\n\t};\n}\n\nexport function createPerspectiveRayFromMouse(mousePoint: Vector2, camera: PerspectiveCamera): Ray {\n\tconst localVector: Vector3 = [\n\t\tmousePoint[0] - camera.settings.planeWidthHalf,\n\t\tcamera.settings.planeHeightHalf - mousePoint[1],\n\t\tcamera.settings.zScale\n\t];\n\treturn {\n\t\torigin: camera.transform.position,\n\t\tvector: multiplyVector(camera.transform.orientation, localVector)\n\t}\n}\n\nfunction raycastGround(ray: Ray): Option<RaycastResult> {\n\tconst planeIntersectionOpt = raycastPlane(ray, [0, -0.5, 0], [0, 1, 0]);\n\tif (isNone(planeIntersectionOpt)) return none;\n\tconst isecPoint = planeIntersectionOpt.value;\n\treturn some({\n\t\tdistance: Vec3.distance(ray.origin, isecPoint),\n\t\tfaceNormal: [0, 1, 0],\n\t\tlocalPoint: isecPoint, globalPoint: isecPoint,\n\t\tvoxel: [\n\t\t\tMath.round(isecPoint[0]),\n\t\t\t-1,\n\t\t\tMath.round(isecPoint[2])\n\t\t]\n\t})\n}\n\n//raycast along the line of sight and find the face of a hit voxel or the ground\nexport function performGazeRaycast(camera: Camera, voxels: Vector3[]): Option<RaycastResult> {\n\tconst ray = createCameraRay(camera);\n\tconst voxelResult = raycastVoxels(ray, voxels);\n\tif (isSome(voxelResult)) return voxelResult;\n\treturn raycastGround(ray);\n}","\n/*\n\tdescription:\n\tcast a ray from the camera into the scene. \n\tif it intersects the \"equation-box\", there will be an intersection line. \n\twe have an equation which is represented by a function f from x, y, z to a number. \n\tf(x, y, z) => number\n\twe want to visualize the set of points where this function becomes zero. \n\tby the way, any equation involving x, y, z can be turned into a function like this. \n\tsimply subtract one side from the other and voila. \n\twe want to find the closest point on the line that satisfies the equation, so is zero. \n\teach point on the intersection line corresponds to a number by this function. \n\tif 0 is the point where the line starts and 1 is where is ends, then we have a function graph. \n\tthen we can simply search for the first zero on this graph (watch out for infinities!).\n\tif we find one, then the next step is to calculate a normal vector to the surface at that point. \n\twhy is there even a surface? i have no proof but it feels like any equation that combines 3 numbers \n\tinto a single number, reduces the degrees of freedom by 1 and thus leads to a surface. \n\tfor the surface normal we need the derivatives of the function. \n\tthere will be at most 3 derivatives (at most because the derivative does not exist necessarily), \n\tone for x, one for y and one for z. \n\tfor very small deviations dx, dy, dz, the deviation in the function output is simply \n\tdx * px + dy * px + dz * pz\n\twhere px, py, pz are the partial derivatives of f. \n\twe are interested in small vectors that keep the function zero. \n\tthose vectors define the surface in the neighbourhood of our point. \n\tand ultimately we want to find a vector that is perpendicular to that surface\n\tdx * px + dy * px + dz * pz = 0.\n\tthis is a dot product between vectors (dx, dy, dz) and (px, py, pz), \n\ttherefore if (dx, dy, dz) satisfies the equation, it lies on the surface and is perpendicular to the \n\tvector (px, py, pz). therefore (px, py, pz) must be the surface normal. \n\twe then use the surface normal to compute the shading of the pixel and that's it. \n*/\n\nimport { isNone, none, Option, some } from \"fp-ts/lib/Option\";\nimport { Morphism, Vector3 } from \"../lib/types\";\nimport { Ray, raycastVoxel } from \"./voxel/raycasting\";\nimport * as Vec3 from \"../lib/vec3\";\n\ntype EquationFunction = (point: Vector3) => Option<number>;\ntype EquationDerivativeFunction = (point: Vector3) => [Option<number>, Option<number>, Option<number>];\ntype GraphFunction = Morphism<number, Option<number>>;\n\nexport function getIntersectionLine(boxSize: number, ray: Ray): Option<[Vector3, Vector3]> {\n\tconst voxelSize = boxSize * 4 + 2;\n\tconst scaledRay: Ray = {\n\t\t...ray,\n\t\torigin: Vec3.multiply(ray.origin, 1 / voxelSize)\n\t};\n\tconst isec1Opt = raycastVoxel(scaledRay)([0, 0, 0]);\n\tif (isNone(isec1Opt)) return none;\n\tconst isec1 = isec1Opt.value;\n\tconst oppositeRay: Ray = {\n\t\torigin: Vec3.add(\n\t\t\tscaledRay.origin, \n\t\t\tVec3.multiply(\n\t\t\t\tVec3.normalize(scaledRay.vector),\n\t\t\t\tisec1.distance + Math.sqrt(3)\n\t\t\t)\n\t\t),\n\t\tvector: Vec3.multiply(scaledRay.vector, -1)\n\t};\n\tconst isec2Opt = raycastVoxel(oppositeRay)([0, 0, 0]);\n\tif (isNone(isec2Opt)) return none;\n\tconst isec2 = isec2Opt.value;\n\treturn some([\n\t\tVec3.multiply(isec1.localPoint, voxelSize),\n\t\tVec3.multiply(isec2.localPoint, voxelSize)\n\t]);\n}\n\ntype Sign = -1 | 0 | 1;\nfunction sign(n: number): Sign {\n\treturn Math.sign(n) as Sign;\n}\n\n//in the range 0 to 1\nexport function findFirstZero(func: GraphFunction): Option<number> {\n\tconst dx = 0.05;\n\tlet prevSign: Option<Sign> = none;\n\tfor (let x = 0; x <= 1; x += dx){\n\t\tconst curValOpt = func(x);\n\t\tif (isNone(curValOpt)) continue;\n\t\tconst curVal = curValOpt.value;\n\t\tconst curSign = sign(curVal);\n\t\tif (curSign === 0) return some(x);\n\t\tif (isNone(prevSign)){\n\t\t\tprevSign = some(curSign);\n\t\t\tcontinue;\n\t\t}\n\t\tif (curSign !== prevSign.value){\n\t\t\tconst [negX, posX] = prevSign.value === -1 ? [x - dx, x] : [x, x - dx];\n\t\t\treturn findZeroByBisection(negX, posX, func);\n\t\t}\n\t}\n\treturn none;\n}\n\nfunction findZeroByBisection(negX: number, posX: number, func: GraphFunction): Option<number> {\n\tlet mX = negX;\n\tfor (let i = 0; i < 20; i++){\n\t\tmX = (negX + posX) / 2;\n\t\tconst mYOpt = func(mX);\n\t\tif (isNone(mYOpt)) return none;\n\t\tconst mY = mYOpt.value;\n\t\tif (mY === 0) return some(mX);\n\t\tif (mY > 0) posX = mX;\n\t\telse negX = mX;\n\t}\n\treturn some(mX);\n}\n\nfunction interpolateLine(line: [Vector3, Vector3], t: number): Vector3 {\n\treturn Vec3.interpolate(line[0], line[1], t)\n}\n\nfunction createLineFunction(equationFunc: EquationFunction, line: [Vector3, Vector3]): GraphFunction {\n\treturn (t: number) => equationFunc(interpolateLine(line, t))\n}\n\nexport const raycastSurfaceNormal = (\n\tboxSize: number,\n\tequationFunc: EquationFunction, \n\tequationDeriv: EquationDerivativeFunction) =>  \n\t\t(ray: Ray): Option<Vector3> => {\n\t\n\tconst lineOpt = getIntersectionLine(boxSize, ray);\n\tif (isNone(lineOpt)) return none;\n\tconst lineFunc = createLineFunction(equationFunc, lineOpt.value);\n\tconst firstZeroOpt = findFirstZero(lineFunc);\n\tif (isNone(firstZeroOpt)) return none;\n\tconst intersectionPoint = interpolateLine(lineOpt.value, firstZeroOpt.value);\n\tconst deriv = equationDeriv(intersectionPoint);\n\tif (isNone(deriv[0]) || isNone(deriv[1]) || isNone(deriv[2])) return none;\n\tconst derivVector = [deriv[0].value, deriv[1].value, deriv[2].value] as Vector3;\n\treturn some(Vec3.normalize(Vec3.multiply(derivVector, +1)));\n}","import { Transform } from '../../lib/transform';\r\nimport { Vector3, Vector2, Matrix3 } from '../../lib/types';\r\nimport { Camera } from './camera';\r\n\r\n//projection ###\r\n\r\nexport interface PerspectiveCamera extends Camera {\r\n\tsettings: CameraSettings \r\n}\r\nexport interface CameraSettings {\r\n\tzScale: number,\r\n    planeWidthHalf: number, \r\n    planeHeightHalf: number\r\n}\r\nexport const createCamSettingsFromCanvas = (zScale: number, planeScale: number, canvas: HTMLCanvasElement): CameraSettings => {\r\n    return {\r\n        zScale,\r\n        planeWidthHalf: canvas.offsetWidth * planeScale / 2,\r\n        planeHeightHalf: canvas.offsetHeight * planeScale / 2\r\n    };\r\n};\r\nexport const projectPoint = (cam: CameraSettings) => {\r\n    return (point: Vector3) : Vector2 => {\r\n        const c = cam.zScale / point[2];\r\n        return [\r\n            c * point[0] / cam.planeWidthHalf,\r\n            c * point[1] / cam.planeHeightHalf\r\n        ]\r\n    } \r\n};\r\nexport const projectPoints = (cam: CameraSettings) => {\r\n\treturn (points: Vector3[]) => {\r\n\t\treturn points.map(projectPoint(cam));\r\n\t};\r\n};","import { flow } from 'fp-ts/lib/function';\nimport { multiplyVector } from '../lib/mat3x3';\nimport { Vector2, Vector3 } from '../lib/types';\nimport * as Vec3 from '../lib/vec3';\nimport { PerspectiveCamera, projectPoint } from './camera/perspective-camera';\n\nexport const viewportToCanvas = (ctx: CanvasRenderingContext2D) => {\n\tconst canvas = ctx.canvas;\n\treturn (point: Vector2): Vector2 => {\n\t\treturn [\n\t\t\tpoint[0] * canvas.offsetWidth / 2,\n\t\t\tpoint[1] * canvas.offsetHeight / 2\n\t\t];\n\t};\n};\n\nexport const camPointToScreenPoint = (ctx: CanvasRenderingContext2D, camera: PerspectiveCamera) => (camPoint: Vector3): Vector2 => {\n\treturn viewportToCanvas(ctx)(\n\t\tprojectPoint(camera.settings)(\n\t\t\tcamPoint\n\t\t)\n\t)\n};\n\nexport const worldPointToCamPoint = (camera: PerspectiveCamera) => (worldPoint: Vector3): Vector3 => {\n\treturn multiplyVector(\n\t\tcamera.inverseMatrix,\n\t\tVec3.subtract(worldPoint, camera.transform.position)\n\t)\n};\n\nexport const worldPointToScreenPoint = (ctx: CanvasRenderingContext2D, camera: PerspectiveCamera) => flow(\n\tworldPointToCamPoint(camera),\n\tcamPointToScreenPoint(ctx, camera)\n);","import { flow, not } from 'fp-ts/lib/function';\r\nimport { Vector3, Vector2, Morphism } from '../lib/types';\r\nimport * as Vec3 from '../lib/vec3';\r\n\r\nexport const randomVector = (maxMag: number = 2) : Vector3 => [0, 1, 2].map(() => (Math.random() - 0.5) * maxMag) as Vector3;\r\nexport const randomColor = () : string => `rgb(${[0, 1, 2].map(() => Math.round(Math.random() * 255)).join(\",\")})`;\r\nexport const randomRange = (min: number, max: number) => min + (max - min) + Math.random();\r\nexport const scaleVector = (scale: number) => ((vec: Vector2) => [vec[0] * scale, vec[1] * scale]);\r\nexport const randomUnitVector = () : Vector3 => Vec3.normalize([0, 1, 2].map(() => Math.random() - 0.5) as Vector3);\r\n\r\nexport const createArray = (length: number): any[] => {\r\n    const arr = [];\r\n    for (let i = 0; i < length; i++){\r\n        arr[i] = i;\r\n    }\r\n    return arr;\r\n};\r\n\r\nexport function normalize(from: number, to: number, value: number): number {\r\n\treturn (value - from) / (to - from);\r\n}\r\nexport function interpolate(from: number, to: number, value: number): number {\r\n\treturn from + (to - from) * value\r\n}\r\n\r\nexport const mapRange = (range1: [number, number], range2: [number, number], value: number): number => {\r\n\tconst relVal = value - range1[0];\r\n\tconst scale = (range2[1] - range2[0]) / (range1[1] - range1[0]);\r\n\treturn range2[0] + relVal * scale;\r\n};\r\n\r\nexport const setY = (y: number) => (v: Vector3) => [v[0], y, v[2]] as Vector3;\r\nexport const setYZero = setY(0);\r\nexport const flattenY = flow(setYZero, Vec3.normalize);\r\n\r\nconst voxelExistsAt = (voxels: Vector3[], point: Vector3): boolean => {\r\n\treturn voxels.some(v => Vec3.equal(v, point));\r\n};\r\nconst voxelExistsOrIsGroundAt = (voxels: Vector3[]) => (point: Vector3): boolean => {\r\n\tif (point[1] < 0) return true;\r\n\treturn voxelExistsAt(voxels, point);\r\n};\r\nconst enclosingOffsets: Vector3[] = [\r\n\t[1, 0, 0], [-1, 0, 0], \r\n\t[0, 1, 0], [0, -1, 0], \r\n\t[0, 0, 1], [0, 0, -1]\r\n];\r\nexport const isVoxelEnclosed = (voxels: Vector3[]) => (voxel: Vector3): boolean => {\r\n\treturn enclosingOffsets.map(offset => Vec3.add(voxel, offset)).every(voxelExistsOrIsGroundAt(voxels))\r\n}\r\nexport function removeEnclosedVoxels(voxels: Vector3[]): Vector3[] {\r\n\treturn voxels.filter(not(isVoxelEnclosed(voxels)));\r\n}\r\n\r\nexport const startLoop = (onLoop: Morphism<number, void>) => {\r\n\tlet prevTime = 0;\r\n\tconst loop = () => {\r\n\t\tconst curTime = window.performance.now();\r\n\t\tconst deltaTime = (curTime - prevTime) / 1000;\r\n\t\tprevTime = curTime;\r\n\t\tonLoop(deltaTime);\r\n\t\trequestAnimationFrame(loop);\r\n\t};\r\n\trequestAnimationFrame(loop);\r\n};\r\n\r\nexport function range(start: number, end: number): number[] {\r\n\tconst array: number[] = [];\r\n\tfor (let i = start; i < end; i++) {\r\n\t\tarray.push(i);\r\n\t}\r\n\treturn array;\r\n}\r\n\r\nexport function adjustCanvasSizeToWindow(canvas: HTMLCanvasElement){\r\n\tconst widthPx = window.innerWidth;\r\n\tconst heightPx = window.innerHeight;\r\n\tconst scalePx = window.devicePixelRatio || 1;\r\n\tObject.assign(canvas.style, {\r\n\t\twidth: `${widthPx}px`,\r\n\t\theight: `${heightPx}px`\r\n\t});\r\n\tObject.assign(canvas, {\r\n\t\twidth: widthPx * scalePx,\r\n\t\theight: heightPx * scalePx\r\n\t});\r\n}","import { isNone, isSome, none, Option, some } from 'fp-ts/lib/Option';\nimport { drawDisc, pathPolyline } from '../lib/ctx-util';\nimport { Morphism, Transformation, Vector2, Vector3 } from '../lib/types';\nimport * as Vec3 from '../lib/vec3';\nimport { OrbitCamera, toRegularCamera } from './camera/orbit-camera';\nimport { CameraSettings, PerspectiveCamera } from './camera/perspective-camera';\nimport { findFirstZero, raycastSurfaceNormal } from './smooth-equation-casting';\nimport { worldPointToCamPoint, worldPointToScreenPoint } from './space-conversion';\nimport { interpolate } from './util';\nimport { createPerspectiveRayFromMouse, Ray } from './voxel/raycasting';\n\n//setup canvas ###\n\nfunction createCtx(){\n\tconst canvas = document.createElement(\"canvas\");\n\tObject.assign(canvas.style, {\n\t\t\"position\": \"absolute\"\n\t});\n\tdocument.body.appendChild(canvas);\n\treturn canvas.getContext(\"2d\");\n}\n\nfunction getCanvasSize(ctx: CanvasRenderingContext2D): Vector2 {\n\tconst { canvas } = ctx;\n\treturn [\n\t\tcanvas.clientWidth, \n\t\tcanvas.clientHeight\n\t]\n}\n\nconst backgroundCtx = createCtx();\nconst ctx = createCtx();\n\nconst updateCanvasSize = (ctx: CanvasRenderingContext2D) => {\n\tconst { canvas } = ctx;\n\tconst widthPx = window.innerWidth;\n\tconst heightPx = window.innerHeight;\n\tconst scalePx = window.devicePixelRatio || 1;\n\tObject.assign(canvas.style, {\n\t\twidth: `${widthPx}px`,\n\t\theight: `${heightPx}px`\n\t});\n\tObject.assign(canvas, {\n\t\twidth: widthPx * scalePx,\n\t\theight: heightPx * scalePx\n\t});\n\tctx.resetTransform();\n\tctx.scale(scalePx, scalePx);\n};\n\nconst onresize = () => {\n\tupdateCanvasSize(ctx);\n\tupdateCanvasSize(backgroundCtx)\n\tconst [w, h] = [window.innerWidth, window.innerHeight];\n\tcamera = {\n\t\t...camera,\n\t\tsettings: {\n\t\t\t...camera.settings,\n\t\t\tplaneWidthHalf: w / 2,\n\t\t\tplaneHeightHalf: h / 2,\n\t\t}\n\t};\n\tprepareAndRender();\n};\nwindow.onresize = onresize;\n\n\nfunction renderCheckerboardPattern(ctx: CanvasRenderingContext2D, cellSize: number){\n\tconst darkColor = \"#262626\";\n\tconst lightColor = \"#5c5c5c\";\n\tconst [w, h] = getCanvasSize(ctx);\n\tconst cellCountX = Math.ceil(w / cellSize);\n\tconst cellCountY = Math.ceil(h / cellSize);\n\tconst gridSize = [cellCountX * cellSize, cellCountY * cellSize];\n\tctx.save();\n\tctx.translate(\n\t\t(w - gridSize[0]) / 2, \n\t\t(h - gridSize[1]) / 2\n\t);\n\tfor (let x = 0; x < cellCountX; x++){\n\t\tfor (let y = 0; y < cellCountY; y++) {\n\t\t\tctx.fillStyle = (x + y) % 2 === 0 ? darkColor : lightColor;\n\t\t\tctx.fillRect(x * cellSize, y * cellSize, cellSize, cellSize);\n\t\t}\n\t}\n\tctx.restore();\n}\n\n\n//camera ###\n\ntype PerspectiveOrbitCamera = OrbitCamera & { settings: CameraSettings };\n\nfunction orthoOrbitToPerspective(cam: PerspectiveOrbitCamera) {\n\treturn {\n\t\t...toRegularCamera(cam),\n\t\tsettings: cam.settings\n\t} as PerspectiveCamera;\n}\n\nlet camera: PerspectiveOrbitCamera = {\n\tradius: 40,\n\tlatitude: 0.52,\n\tlongitude: -0.82,\n\tsettings: {\n\t\tplaneWidthHalf: window.innerWidth / 2,\n\t\tplaneHeightHalf: window.innerHeight / 2,\n\t\tzScale: 2000\n\t}\n};\n\nfunction setupOrbitCameraControl() {\n\tconst { canvas } = ctx;\n\tcanvas.addEventListener(\"mousemove\", e => {\n\t\tif (e.buttons !== 1) return;\n\t\tconst s = 0.01;\n\t\tcamera = {\n\t\t\t...camera,\n\t\t\tlongitude: camera.longitude + e.movementX * s,\n\t\t\tlatitude: camera.latitude + e.movementY * s\n\t\t};\n\t\tprepareAndRender();\n\t});\n\tcanvas.addEventListener(\"wheel\", e => {\n\t\tcamera = {\n\t\t\t...camera,\n\t\t\tradius: camera.radius * (1 + e.deltaY * 0.001)\n\t\t}\n\t\tprepareAndRender();\n\t});\n}\n\n\n\n\n\n\nconst backgroundColor = \"#252729\";// \"#d4d3d2\";\nlet boxSize = 2;\n\nfunction prepareAndRender() {\n\trenderCheckerboardPattern(backgroundCtx, 100);\n\n\tconst { canvas } = ctx;\n\tconst [w, h] = [canvas.clientWidth, canvas.clientHeight];\n\n\tctx.save();\n\t// ctx.fillStyle = backgroundColor;\n\t// ctx.fillRect(0, 0, w, h);\n\tctx.clearRect(0, 0, w, h);\n\tctx.translate(w / 2, h / 2);\n\tctx.scale(1, -1);\n\n\trender();\n\n\tctx.restore();\n}\n\nconst unitBoxVerts: Vector3[] = [\n\t[+1, +1, +1],\n\t[-1, +1, +1],\n\t[+1, -1, +1],\n\t[-1, -1, +1],\n\t[+1, +1, -1],\n\t[-1, +1, -1],\n\t[+1, -1, -1],\n\t[-1, -1, -1],\n];\nconst boxWireIndices: [number, number][] = [\n\t[0, 1], [2, 3], [4, 5], [6, 7],\n\t[0, 2], [1, 3], [4, 6], [5, 7],\n\t[0, 4], [1, 5], [2, 6], [3, 7]\n];\n\n\n\nlet boxIntersectionLine: Option<[Vector3, Vector3]> = none;\nfunction renderIntersectionLine(ctx: CanvasRenderingContext2D, cam: PerspectiveCamera) {\n\tif (isNone(boxIntersectionLine)) return;\n\tctx.save();\n\tctx.lineWidth = 4;\n\tctx.strokeStyle = \"orange\";\n\tconst screenPoints = boxIntersectionLine.value.map(worldPointToScreenPoint(ctx, cam));\n\tpathPolyline(ctx, screenPoints);\n\tctx.stroke();\n\tctx.restore();\n}\n\n\nconst isOcclusionEdge = (worldToCam: Transformation<Vector3>, cubeCenter: Vector3) => (vert1: Vector3, vert2: Vector3): boolean => {\n\tconst edgeCenter = Vec3.interpolate(vert1, vert2, 0.5);\n\tlet occlusionCount = 0;\n\tfor (let i = 0; i < 3; i++){\n\t\tconst val = edgeCenter[i];\n\t\tif (Math.abs(val) < 1e-5) continue;\n\t\t\n\t\tconst faceCenterLocal = [0, 0, 0] as Vector3;\n\t\tfaceCenterLocal[i] = val;\n\t\tconst faceCenterGlobal = worldToCam(faceCenterLocal);\n\t\tconst normalVector = Vec3.subtract(faceCenterGlobal, cubeCenter);\n\t\tif (Vec3.dot(normalVector, faceCenterGlobal) < 0){\n\t\t\tocclusionCount++;\n\t\t}\n\t}\n\treturn occlusionCount > 1;\n}\n\nfunction renderWireBox(ctx: CanvasRenderingContext2D, boxSize: number, cam: PerspectiveCamera){\n\tctx.save();\n\tctx.lineWidth = 4;\n\tctx.strokeStyle = \"#fcba03\";\n\tconst boxSideLength = boxSize * 2 + 1;\n\tconst boxVerts = unitBoxVerts.map(v => Vec3.multiply(v, boxSideLength));\n\tconst projectedBoxVerts = boxVerts.map(worldPointToScreenPoint(ctx, cam));\n\t// const skipEdge = isOcclusionEdge(cam.transform.position);\n\tconst skipEdge = isOcclusionEdge(\n\t\tworldPointToCamPoint(cam), \n\t\tworldPointToCamPoint(cam)([0, 0, 0]),\n\t);\n\tfor (const edgeInds of boxWireIndices) {\n\t\tconst edgeVerts = edgeInds.map(i => projectedBoxVerts[i]);\n\t\tif (skipEdge(boxVerts[edgeInds[0]], boxVerts[edgeInds[1]])) continue;\n\t\tpathPolyline(ctx, edgeVerts);\n\t\tctx.stroke();\n\t}\n\tctx.restore();\n}\n\nconst render = () => {\n\tconst perspectiveCam = orthoOrbitToPerspective(camera);\n\t\n\trenderIntersectionLine(ctx, perspectiveCam);\n\trenderWireBox(ctx, boxSize, perspectiveCam);\n};\n\n\nfunction graphFunction(x: number): Option<number> {\n\tif (x === 0) return none;\n\treturn some(Math.log(Math.sin(x)) + 1);\n}\nfunction renderZeroStuff(){\n\tctx.save();\n\t\n\tctx.lineWidth = 2;\n\tctx.strokeStyle = \"black\";\n\tpathPolyline(ctx, [[-500, 0], [+500, 0]]);\n\n\tctx.stroke();\n\tfor (let x = 0; x < 1; x += 0.02){\n\t\tconst yOpt = graphFunction(x);\n\t\tif (isNone(yOpt)) continue;\n\t\tconst y = yOpt.value;\n\t\tconst screenX = x * 200;\n\t\tconst screenY = y * 200;\n\t\tctx.fillStyle = \"black\";\n\t\tdrawDisc(ctx, [screenX, screenY], 4);\n\t}\n\t\n\tconst firstZeroOpt = findFirstZero(graphFunction);\n\tif (isSome(firstZeroOpt)){\n\t\tconst x = firstZeroOpt.value;\n\t\tctx.fillStyle = \"red\";\n\t\tdrawDisc(ctx, [x * 200, 0], 4);\n\t}\n\t\n\tctx.restore();\n}\n\n\nfunction nextFramePromise(){\n\treturn new Promise((resolve) => requestAnimationFrame(resolve));\n}\n\nfunction renderBackgroundProgressStrip(stripWidth: number, height: number, ctx: CanvasRenderingContext2D){\n\tctx.fillStyle = \"teal\";\n\tctx.strokeStyle = \"white\";\n\tctx.fillRect(0, 0, stripWidth, height);\n\tctx.beginPath();\n\tctx.moveTo(stripWidth, 0);\n\tctx.lineTo(stripWidth, height);\n\tctx.lineWidth = 2;\n\tctx.stroke();\n}\n\nasync function fillPixelsByRaytracing(\n\tctx: CanvasRenderingContext2D, backgroundCtx: CanvasRenderingContext2D, \n\tcamera: PerspectiveCamera, raycastFunc: Morphism<Ray, Option<Vector3>>){\n\t\n\tconst surfaceColor = [255, 255, 255] as Vector3;\n\tconst lightDirection: Vector3 = Vec3.normalize([0.3, -1, -0.2]);\n\tconst [w, h] = getCanvasSize(ctx);\n\tlet prevWorkStartTime = window.performance.now();\n\tconst pixelSize = 1.5;\n\n\tfor (let x = 0; x < w; x++){\n\t\trenderBackgroundProgressStrip(x, h, backgroundCtx);\n\t\tfor (let y = 0; y < h; y++){\n\t\t\tconst workTimeDelta = window.performance.now() - prevWorkStartTime;\n\t\t\tif (workTimeDelta > 0.2) await nextFramePromise();\n\t\t\tprevWorkStartTime = window.performance.now()\n\n\t\t\tconst screenPoint = [x, y] as Vector2;\n\t\t\t\n\t\t\tconst ray = createPerspectiveRayFromMouse(screenPoint, camera);\n\t\t\tconst normalOpt = raycastFunc(ray);\n\t\t\tif (isNone(normalOpt)) continue;\n\n\t\t\tconst normal = normalOpt.value;\n\t\t\tconst brightness = interpolate(\n\t\t\t\t1, 0.3,\n\t\t\t\tMath.max(0, Vec3.dot(normal, lightDirection))\n\t\t\t);\n\t\t\tconst adjustedColor = surfaceColor.map(c => Math.round(c * brightness)) as Vector3;\n\t\t\tctx.fillStyle = `rgb(${adjustedColor.join(\",\")})`;\n\t\t\tctx.fillRect(x, y, pixelSize, pixelSize);\n\t\t}\n\t}\n}\n\n\ntype OptVector3 = [Option<number>, Option<number>, Option<number>];\ntype OptVector2 = [Option<number>, Option<number>];\n\ntype Vec3Func = Morphism<Vector3, Option<number>>;\ntype Vec3DerivFunc = Morphism<Vector3, OptVector3>;\n\ntype SurfaceEquationAndDeriv = {\n\tequationFunc: Vec3Func,\n\tderivFunc: Vec3DerivFunc\n};\n\nconst measureDerivatives = (func: Vec3Func): Vec3DerivFunc => {\n\tconst d = 0.0001;\n\treturn (v: Vector3) => {\n\t\tconst measuredDerivs = [none, none, none] as OptVector3;\n\t\tfor (let i = 0; i < 3; i++){\n\t\t\tconst p = v.slice() as Vector3;\n\t\t\tp[i] += d;\n\t\t\tconst [v1, v2] = [func(v), func(p)];\n\t\t\tif (isNone(v1) || isNone(v2)) continue;\n\t\t\tconst deriv = (v2.value - v1.value) / d;\n\t\t\tmeasuredDerivs[i] = some(deriv);\n\t\t}\n\t\treturn measuredDerivs;\n\t};\n};\n\n\ntype ScalarField = (p: Vector2) => Option<number>;\ntype ScalarFieldDeriv = (p: Vector2) => OptVector2;\n\nfunction makeSurfaceEquationAndDerivByScalarField(scalarField: ScalarField, scalarFieldDeriv: ScalarFieldDeriv): SurfaceEquationAndDeriv {\n\tconst equationFunc = ([x, y, z]: Vector3): Option<number> => {\n\t\tconst scalar = scalarField([x, z]);\n\t\tif (isNone(scalar)) return none;\n\t\treturn some(scalar.value - y);\n\t};\n\tconst derivFunc = ([x, y, z]: Vector3): OptVector3 => {\n\t\tconst subDeriv = scalarFieldDeriv([x, z]);\n\t\treturn [\n\t\t\tsubDeriv[0], \n\t\t\tsome(-1), \n\t\t\tsubDeriv[1]\n\t\t]\n\t};\n\t\n\treturn { equationFunc, derivFunc }\n}\n\nconst { sin, cos } = Math;\n\nconst sineFuncs: SurfaceEquationAndDeriv = (() => {\n\tconst [a, f] = [2.5, 0.5];\n\tconst func: Morphism<Vector3, Option<number>> = (p: Vector3) => {\n\t\tconst r = Math.hypot(p[0], p[2]);\n\t\treturn some(a * Math.cos(r * f) - p[1]);\n\t};\n\tconst deriv: Morphism<Vector3, [Option<number>, Option<number>, Option<number>]> = (p: Vector3) => {\n\t\tif (p[0] === 0 && p[2] === 0){\n\t\t\treturn [some(0), some(-1), some(0)]\n\t\t}\n\t\tconst rSqrd = p[0]**2 + p[2]**2;\n\t\tconst r = Math.sqrt(rSqrd);\n\t\tconst s1 = -a / rSqrd * Math.sin(r * f);\n\t\treturn [\n\t\t\tsome(s1 * p[0]),\n\t\t\tsome(s1 * p[2]),\n\t\t\tsome(-1)\n\t\t]\n\t};\n\treturn { equationFunc: func, derivFunc: deriv };\n})();\n\nconst inverseProdFuncs: SurfaceEquationAndDeriv = (() => {\n\tconst [a, f] = [2.5, 0.5];\n\tconst func: Morphism<Vector3, Option<number>> = (p: Vector3) => {\n\t\treturn some(p[0] * p[1] * p[2] - 2);\n\t};\n\tconst deriv: Morphism<Vector3, [Option<number>, Option<number>, Option<number>]> = (p: Vector3) => {\n\t\tconst [x, y, z] = p;\n\t\tif (x === 0 || y === 0 || z === 0) {\n\t\t\treturn [\n\t\t\t\tnone, none, none\n\t\t\t]\n\t\t}\n\t\treturn [\n\t\t\tsome(y * z),\n\t\t\tsome(z * x),\n\t\t\tsome(x * y)\n\t\t]\n\t};\n\treturn { equationFunc: func, derivFunc: deriv };\n})();\n\nconst sphereFuncs: SurfaceEquationAndDeriv = (() => {\n\tconst rSqrd = 10;\n\tconst func: Morphism<Vector3, Option<number>> = (p: Vector3) => {\n\t\tconst [x, y, z] = p;\n\t\treturn some(x**2 + y**2 + z**2 - rSqrd);\n\t};\n\tconst deriv: Morphism<Vector3, [Option<number>, Option<number>, Option<number>]> = (p: Vector3) => {\n\t\tconst [x, y, z] = p;\n\t\treturn [\n\t\t\tsome(2 * x),\n\t\t\tsome(2 * y),\n\t\t\tsome(2 * z)\n\t\t]\n\t};\n\treturn { equationFunc: func, derivFunc: deriv };\n})();\n\nconst metaBall: SurfaceEquationAndDeriv = (() => {\n\tconst separation = 2;\n\tconst func: Morphism<Vector3, Option<number>> = (p: Vector3) => {\n\t\tconst [x, y, z] = p;\n\t\tconst y2 = y**2;\n\t\tconst z2 = z**2;\n\n\t\tconst dist1 = (x + separation)**2 + y2 + z2;\n\t\tconst dist2 = (x - separation)**2 + y2 + z2;\n\t\treturn some((dist1 * dist2) - 18);\n\t};\n\treturn { \n\t\tequationFunc: func, \n\t\tderivFunc: measureDerivatives(func) \n\t};\n})();\n\nconst blobsFunc: SurfaceEquationAndDeriv = (() => {\n\tconst c = 1.4;\n\tconst func: Morphism<Vector3, Option<number>> = (p: Vector3) => {\n\t\tconst [x, y, z] = p;\n\t\treturn some(\n\t\t\tsin(x) + sin(y) + sin(z) - c\n\t\t);\n\t};\n\tconst deriv: Morphism<Vector3, [Option<number>, Option<number>, Option<number>]> = (p: Vector3) => {\n\t\tconst [x, y, z] = p;\n\t\treturn [\n\t\t\tsome(cos(x)),\n\t\t\tsome(cos(y)),\n\t\t\tsome(cos(z)),\n\t\t]\n\t};\n\treturn { equationFunc: func, derivFunc: deriv };\n})();\n\nconst testFunc1: SurfaceEquationAndDeriv = (() => {\n\tconst c = 1;\n\tconst func: Morphism<Vector3, Option<number>> = (p: Vector3) => {\n\t\tconst [x, y, z] = p;\n\t\treturn some(\n\t\t\tcos(x**3) + cos(y**3) + cos(z**3) - Vec3.magnitude(p)\n\t\t);\n\t};\n\tconst deriv: Morphism<Vector3, OptVector3> = (p: Vector3) => {\n\t\tconst r = Vec3.magnitude(p);\n\t\treturn [0, 1, 2].map(i => some(-3 * p[i]**2 * sin(p[i]**3) - p[i] / r)) as OptVector3;\n\t};\n\treturn { equationFunc: func, derivFunc: deriv };\n})();\n\nconst hillFuncs: SurfaceEquationAndDeriv = (() => {\n\tconst func: Morphism<Vector3, Option<number>> = (p: Vector3) => {\n\t\treturn some(\n\t\t\t(1 + Vec3.sqrdMagnitude(p))**(-2)\n\t\t);\n\t};\n\tconst deriv: Morphism<Vector3, OptVector3> = (p: Vector3) => {\n\t\tconst r = Vec3.magnitude(p);\n\t\tconst t = -4 * (1 + Vec3.sqrdMagnitude(p))**(-3);\n\t\treturn [0, 1, 2].map(i => some(t * p[i])) as OptVector3;\n\t};\n\treturn { equationFunc: func, derivFunc: deriv };\n})();\n\nconst flatSurfaceFuncs: SurfaceEquationAndDeriv = (() => {\n\tconst coeffs: Vector3 = [0, 1, 2].map(n => Math.random() - 0.5) as Vector3;\n\tconst func: Morphism<Vector3, Option<number>> = (p: Vector3) => {\n\t\treturn some(\n\t\t\tcoeffs[0] * p[0] + \n\t\t\tcoeffs[1] * p[1] +\n\t\t\tcoeffs[2] * p[2]\n\t\t);\n\t};\n\tconst deriv: Morphism<Vector3, OptVector3> = (p: Vector3) => {\n\t\treturn coeffs.map(some) as OptVector3\n\t};\n\treturn { equationFunc: func, derivFunc: deriv };\n})();\n\nconst cylinderFuncs: SurfaceEquationAndDeriv = (() => {\n\tconst rSqrd = 40;\n\tconst func: Morphism<Vector3, Option<number>> = (p: Vector3) => {\n\t\tconst [x, y, z] = p;\n\t\treturn some(\n\t\t\tx**2 + z**2 - rSqrd\n\t\t);\n\t};\n\tconst deriv: Morphism<Vector3, OptVector3> = (p: Vector3) => {\n\t\treturn [\n\t\t\tsome(2 * p[0]),\n\t\t\tsome(0), \n\t\t\tsome(2 * p[2])\n\t\t]\n\t};\n\treturn { equationFunc: func, derivFunc: deriv };\n})();\n\nconst scalarFieldFuncs1: SurfaceEquationAndDeriv = (() => {\n\tconst a = 1;\n\tconst field: ScalarField = ([x, y]) => some(a * Math.sin(x) * Math.sin(y));\n\tconst deriv: ScalarFieldDeriv = ([x, y]) => [\n\t\tsome(a * Math.cos(x) * Math.sin(y)),\n\t\tsome(a * Math.sin(x) * Math.cos(y))\n\t];\n\treturn makeSurfaceEquationAndDerivByScalarField(field, deriv);\n})();\n\nconst scalarFieldFuncs2: SurfaceEquationAndDeriv = (() => {\n\tconst a = -2;\n\tconst field: ScalarField = ([x, y]) => some(a * Math.log(Math.hypot(x, y)) - 0.8);\n\t//log((x^2 + y^2)^0.5) -> x * (x^2 + y^2)^(-1)\n\tconst deriv: ScalarFieldDeriv = ([x, y]) => {\n\t\tconst s = a / (x**2 + y**2);\n\t\treturn [\n\t\t\tsome(x * s),\n\t\t\tsome(y * s)\n\t\t]\n\t};\n\treturn makeSurfaceEquationAndDerivByScalarField(field, deriv);\n})();\n\n\nlet selectedFuncs: SurfaceEquationAndDeriv = metaBall;\n\n(window as any).setEquationFunc = (untypedFunc: any) => {\n\tif (typeof(untypedFunc) !== \"function\"){\n\t\tconsole.error(\"supplied argument is not a function!\");\n\t\treturn;\n\t}\n\tconst safeFunc: Vec3Func = (v) => {\n\t\tconst untypedOutput = untypedFunc(v);\n\t\tif (typeof(untypedOutput) !== \"number\") return none;\n\t\treturn some(untypedOutput);\n\t};\n\tselectedFuncs = {\n\t\tequationFunc: safeFunc,\n\t\tderivFunc: measureDerivatives(safeFunc)\n\t};\n\tnormalFunc = createNormalFunc();\n}\n\nfunction createNormalFunc(){\n\tconst funcs: SurfaceEquationAndDeriv = selectedFuncs;\n\tconst normalFunc = raycastSurfaceNormal(boxSize, funcs.equationFunc, funcs.derivFunc);\n\treturn normalFunc;\n}\n\nlet normalFunc: Morphism<Ray, Option<Vector3>> = createNormalFunc();\nlet raytracingActive = false;\n\nfunction setupRaycastingControl() {\n\tdocument.addEventListener(\"keypress\", e => {\n\t\tif (raytracingActive) return;\n\t\tif (e.key !== \" \") return;\n\t\tprepareAndRender();\n\t\traytracingActive = true;\n\t\tfillPixelsByRaytracing(\n\t\t\tctx, backgroundCtx,\n\t\t\torthoOrbitToPerspective(camera), normalFunc\n\t\t).then(\n\t\t\t() => raytracingActive = false\n\t\t)\n\t});\n\tconst { canvas } = ctx;\n\tcanvas.addEventListener(\"mousemove\", e => {\n\t\tif (!e.ctrlKey) return;\n\t\tconst perspectiveCam = orthoOrbitToPerspective(camera);\n\t\tconst mousePoint: Vector2 = [e.offsetX, e.offsetY];\n\t\tconst ray = createPerspectiveRayFromMouse(mousePoint, perspectiveCam);\n\t\tconst normalOpt = normalFunc(ray);\n\t\tif (isNone(normalOpt)) return;\n\t\tconst normal = normalOpt.value;\n\t\tconst surfaceColor = [255, 255, 255] as Vector3;\n\t\tconst lightDirection: Vector3 = Vec3.normalize([0.3, -1, -0.2]);\n\t\tconst brightness = interpolate(\n\t\t\t1, 0.3,\n\t\t\tMath.max(0, Vec3.dot(normal, lightDirection))\n\t\t);\n\t\tconst adjustedColor = surfaceColor.map(c => Math.round(c * brightness)) as Vector3;\n\t\tctx.fillStyle = `rgb(${adjustedColor.join(\",\")})`;\n\t\tctx.fillRect(mousePoint[0], mousePoint[1], 1, 1);\n\t});\n}\n\nfunction addInstructions(){\n\tdocument.body.insertAdjacentHTML(\n\t\t\"beforeend\",\n\t\t`\n\t\t\t<div \n\t\t\t\tid=\"instructions\" \n\t\t\t\tstyle=\"\n\t\t\t\t\tposition: absolute; \n\t\t\t\t\ttop: 0px; left: 0px; right: 0px; \n\t\t\t\t\tcolor: #e7e7e7; font-size: 28px;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\"\n\t\t\t>\n\t\t\t\t<p>\n\t\t\t\t\tyou can supply your own equation in the developer console!\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tpress space to start rendering\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t`\n\t);\n\n\t//remove instructions when space is pressed\n\tdocument.addEventListener(\"keydown\", e => {\n\t\tif (e.key === \" \"){\n\t\t\tconst instructionsDiv = document.querySelector(\"#instructions\");\n\t\t\tif (!instructionsDiv) return;\n\t\t\tinstructionsDiv.remove();\n\t\t}\n\t});\n}\n\nfunction addConsoleInstructions(){\n\tconsole.log(`here is an example how to write a function.\\nlet's say you want to plot the equation x * x = y - z\\nsimply subtract the right side from the left and write x * x - (y - z).\\nthen call this global function:\\nsetEquationFunc([x, y, z] => x * x - y + z);\n\t`);\n}\n\nconst main = () => {\n\taddInstructions();\n\taddConsoleInstructions();\n\tupdateCanvasSize(ctx);\n\tupdateCanvasSize(backgroundCtx);\n\tonresize();\n\tsetupOrbitCameraControl();\n\tsetupRaycastingControl();\n\tprepareAndRender();\n};\nmain();","import './smooth-equation-casting-test';","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}